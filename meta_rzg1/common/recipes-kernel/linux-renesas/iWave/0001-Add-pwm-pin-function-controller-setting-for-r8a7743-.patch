From 96eabb8d6027cfbc302145e7dff22f1979e7ff09 Mon Sep 17 00:00:00 2001
From: TungDang <tung.dang.jy@rvc.renesas.com>
Date: Thu, 23 Jun 2016 14:29:17 +0700
Subject: [PATCH] add pwm pin function controller setting for r8a7743 chip

Signed-off-by: TungDang <tung.dang.jy@rvc.renesas.com>
---
 drivers/pinctrl/sh-pfc/pfc-r8a7743.c | 127 +++++++++++++++++++++++++++++++++++
 1 file changed, 127 insertions(+)

diff --git a/drivers/pinctrl/sh-pfc/pfc-r8a7743.c b/drivers/pinctrl/sh-pfc/pfc-r8a7743.c
index 43ccd80..eea4e9d 100644
--- a/drivers/pinctrl/sh-pfc/pfc-r8a7743.c
+++ b/drivers/pinctrl/sh-pfc/pfc-r8a7743.c
@@ -1562,6 +1562,80 @@ static const unsigned int tpu_to3_mux[] = {
 	TPU_TO3_MARK,
 };
 
+/* - PWM -------------------------------------------------------------------- */
+static const unsigned int pwm0_pins[] = {
+    RCAR_GP_PIN(6, 14),
+};
+static const unsigned int pwm0_mux[] = {
+    PWM0_MARK,
+};
+static const unsigned int pwm0_b_pins[] = {
+    RCAR_GP_PIN(5, 30),
+};
+static const unsigned int pwm0_b_mux[] = {
+    PWM0_B_MARK,
+};
+static const unsigned int pwm1_pins[] = {
+     RCAR_GP_PIN(1, 17),
+};
+static const unsigned int pwm1_mux[] = {
+     PWM1_MARK,
+};
+static const unsigned int pwm1_b_pins[] = {
+     RCAR_GP_PIN(6, 15),
+};
+static const unsigned int pwm1_b_mux[] = {
+     PWM1_B_MARK,
+};
+static const unsigned int pwm2_pins[] = {
+     RCAR_GP_PIN(1, 18),
+};
+static const unsigned int pwm2_mux[] = {
+     PWM2_MARK,
+};
+static const unsigned int pwm2_b_pins[] = {
+     RCAR_GP_PIN(0, 16),
+};
+static const unsigned int pwm2_b_mux[] = {
+     PWM2_B_MARK,
+};
+static const unsigned int pwm3_pins[] = {
+     RCAR_GP_PIN(1, 24),
+};
+static const unsigned int pwm3_mux[] = {
+     PWM3_MARK,
+};
+static const unsigned int pwm4_pins[] = {
+     RCAR_GP_PIN(3, 26),
+};
+static const unsigned int pwm4_mux[] = {
+     PWM4_MARK,
+};
+static const unsigned int pwm4_b_pins[] = {
+     RCAR_GP_PIN(3, 31),
+};
+static const unsigned int pwm4_b_mux[] = {
+     PWM4_B_MARK,
+};
+static const unsigned int pwm5_pins[] = {
+	RCAR_GP_PIN(7, 21),
+};
+static const unsigned int pwm5_mux[] = {
+	PWM5_MARK,
+};
+static const unsigned int pwm5_b_pins[] = {
+	RCAR_GP_PIN(7, 20),
+};
+static const unsigned int pwm5_b_mux[] = {
+	PWM5_B_MARK,
+};
+static const unsigned int pwm6_pins[] = {
+	RCAR_GP_PIN(7, 22),
+};
+static const unsigned int pwm6_mux[] = {
+	PWM6_MARK,
+};
+
 /* - CAN -------------------------------------------------------------------- */
 
 static const unsigned int can0_data_pins[] = {
@@ -4068,6 +4142,18 @@ static const struct sh_pfc_pin_group pinmux_groups[] = {
 	SH_PFC_PIN_GROUP(audio_clk_c),
 	SH_PFC_PIN_GROUP(audio_clkout),
 	SH_PFC_PIN_GROUP(tpu_to3),
+	SH_PFC_PIN_GROUP(pwm0),
+	SH_PFC_PIN_GROUP(pwm0_b),
+	SH_PFC_PIN_GROUP(pwm1),
+	SH_PFC_PIN_GROUP(pwm1_b),
+	SH_PFC_PIN_GROUP(pwm2),
+	SH_PFC_PIN_GROUP(pwm2_b),
+	SH_PFC_PIN_GROUP(pwm3),
+	SH_PFC_PIN_GROUP(pwm4),
+	SH_PFC_PIN_GROUP(pwm4_b),
+	SH_PFC_PIN_GROUP(pwm5),
+	SH_PFC_PIN_GROUP(pwm5_b),
+	SH_PFC_PIN_GROUP(pwm6),
 	SH_PFC_PIN_GROUP(can0_data),
 	SH_PFC_PIN_GROUP(can0_data_b),
 	SH_PFC_PIN_GROUP(can0_data_c),
@@ -4427,6 +4513,39 @@ static const char * const tpu_groups[] = {
 	"tpu_to3",
 };
 
+static const char * const pwm0_groups[] = {
+	"pwm0",
+	"pwm0_b",
+};
+
+static const char * const pwm1_groups[] = {
+	"pwm1",
+	"pwm1_b",
+};
+
+static const char * const pwm2_groups[] = {
+	"pwm2",
+	"pwm2_b",
+};
+
+static const char * const pwm3_groups[] = {
+	"pwm3",
+};
+
+static const char * const pwm4_groups[] = {
+	"pwm4",
+	"pwm4_b",
+};
+
+static const char * const pwm5_groups[] = {
+	"pwm5",
+	"pwm5_b",
+};
+
+static const char * const pwm6_groups[] = {
+	"pwm6",
+};
+
 static const char * const du_groups[] = {
 	"du_rgb666",
 	"du_rgb888",
@@ -4627,6 +4746,7 @@ static const char * const msiof2_groups[] = {
 	"msiof2_tx_e",
 };
 
+
 static const char * const qspi_groups[] = {
 	"qspi_ctrl",
 	"qspi_data2",
@@ -4862,6 +4982,13 @@ static const char * const avb_groups[] = {
 static const struct sh_pfc_function pinmux_functions[] = {
 	SH_PFC_FUNCTION(audio_clk),
 	SH_PFC_FUNCTION(tpu),
+	SH_PFC_FUNCTION(pwm0),
+	SH_PFC_FUNCTION(pwm1),
+	SH_PFC_FUNCTION(pwm2),
+	SH_PFC_FUNCTION(pwm3),
+	SH_PFC_FUNCTION(pwm4),
+	SH_PFC_FUNCTION(pwm5),
+	SH_PFC_FUNCTION(pwm6),
 	SH_PFC_FUNCTION(can0),
 	SH_PFC_FUNCTION(can1),
 	SH_PFC_FUNCTION(du),
-- 
1.9.1

