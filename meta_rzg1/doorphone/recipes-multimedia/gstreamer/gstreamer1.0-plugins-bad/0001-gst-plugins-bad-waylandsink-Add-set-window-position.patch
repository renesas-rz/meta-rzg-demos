diff --git a/ext/wayland/gstwaylandsink.c b/ext/wayland/gstwaylandsink.c
index bdebcf5..6884adf 100644
--- a/ext/wayland/gstwaylandsink.c
+++ b/ext/wayland/gstwaylandsink.c
@@ -53,7 +53,9 @@ enum
 enum
 {
   PROP_0,
-  PROP_WAYLAND_DISPLAY
+  PROP_WAYLAND_DISPLAY,
+  PROP_WAYLAND_POSITION_X,    /* add property (position_x) */
+  PROP_WAYLAND_POSITION_Y     /* add property (position_y) */
 };
 
 GST_DEBUG_CATEGORY (gstwayland_debug);
@@ -220,6 +222,25 @@ gst_wayland_sink_class_init (GstWaylandSinkClass * klass)
       g_param_spec_pointer ("wayland-display", "Wayland Display",
           "Wayland  Display handle created by the application ",
           G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+  /* install property (position_x) */
+  g_object_class_install_property (G_OBJECT_CLASS(klass), PROP_WAYLAND_POSITION_X,
+      g_param_spec_int ("position_x",
+                        "Position_X",
+                        "Wayland  Position X value from the application ",
+                        0,
+                        4864,
+                        0,
+                        G_PARAM_READWRITE));
+
+  /* install property (position_y) */
+  g_object_class_install_property (G_OBJECT_CLASS(klass), PROP_WAYLAND_POSITION_Y,
+      g_param_spec_int ("position_y",
+                        "Position_Y",
+                        "Wayland  Position Y value from the application ",
+                        0,
+                        1080,
+                        0,
+                        G_PARAM_READWRITE));
 }
 
 static void
@@ -236,6 +257,8 @@ gst_wayland_sink_init (GstWaylandSink * sink)
   sink->pool = NULL;
   sink->ext_display = FALSE;
   sink->preroll_buffer = NULL;
+  sink->position_x = -1;
+  sink->position_y = -1;
 
   g_mutex_init (&sink->wayland_lock);
 }
@@ -250,6 +273,14 @@ gst_wayland_sink_get_property (GObject * object,
     case PROP_WAYLAND_DISPLAY:
       g_value_set_pointer (value, sink->display->display);
       break;
+    case PROP_WAYLAND_POSITION_X:
+      /* set position_x property */
+      g_value_set_int (value, sink->position_x);
+      break;
+    case PROP_WAYLAND_POSITION_Y:
+      /* set position_y property */
+      g_value_set_int (value, sink->position_y);
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -267,6 +298,14 @@ gst_wayland_sink_set_property (GObject * object,
       sink->display->display = g_value_get_pointer (value);
       sink->ext_display = TRUE;
       break;
+    case PROP_WAYLAND_POSITION_X:
+      /* get position_x property */
+      sink->position_x = g_value_get_int (value);;
+      break;
+    case PROP_WAYLAND_POSITION_Y:
+      /* get position_y property */
+      sink->position_y = g_value_get_int (value);;
+      break;
     default:
       G_OBJECT_WARN_INVALID_PROPERTY_ID (object, prop_id, pspec);
       break;
@@ -537,10 +576,22 @@ create_display (GstWaylandSink * sink)
         &shell_surface_listener, window);
 
     if (fullscreen) {
-      wl_shell_surface_set_fullscreen (window->shell_surface,
-          WL_SHELL_SURFACE_FULLSCREEN_METHOD_DEFAULT, 0, display->output);
+      /* set window position */
+      if ( sink->position_x < 1920 ) {
+        wl_shell_surface_set_fullscreen (window->shell_surface,
+            WL_SHELL_SURFACE_FULLSCREEN_METHOD_DEFAULT, 0, /*display->output*/NULL);
+      } else {
+        wl_shell_surface_set_fullscreen (window->shell_surface,
+            WL_SHELL_SURFACE_FULLSCREEN_METHOD_DEFAULT, 0, display->output);
+      }
     } else {
-      wl_shell_surface_set_toplevel (window->shell_surface);
+      if ( (sink->position_x == -1) || (sink->position_y == -1) ) {
+        wl_shell_surface_set_toplevel (window->shell_surface);
+      } else {
+        /* set window position */
+        wl_shell_surface_set_transient (window->shell_surface, window->surface, sink->position_x, sink->position_y, 0);
+        wl_shell_surface_set_toplevel (window->shell_surface);
+      }
     }
   }
   sink->window = window;
diff --git a/ext/wayland/gstwaylandsink.h b/ext/wayland/gstwaylandsink.h
index e91a440..0b442bd 100644
--- a/ext/wayland/gstwaylandsink.h
+++ b/ext/wayland/gstwaylandsink.h
@@ -114,6 +114,8 @@ struct _GstWaylandSink
 
   gint video_width;
   gint video_height;
+  gint position_x;  /* property(position_x) */
+  gint position_y;  /* property(position_y) */
   uint32_t format;
 
   gboolean ext_display;
