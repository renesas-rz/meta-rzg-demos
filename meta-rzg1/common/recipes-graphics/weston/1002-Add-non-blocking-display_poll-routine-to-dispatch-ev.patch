From 3486ee8dadc0d26fa172510a0df5546a9f4d69a5 Mon Sep 17 00:00:00 2001
From: TraHT <traht@fsoft.com.vn>
Date: Wed, 27 Jun 2018 20:30:03 +0700
Subject: Modify
 1002-Add-non-blocking-display_poll-routine-to-dispatch-ev.patch to fix hunk

Signed-off-by: TraHT <traht@fsoft.com.vn>
---
 clients/window.c | 41 +++++++++++++++++++++++++++++++++++++++++
 clients/window.h |  3 +++
 2 files changed, 44 insertions(+)

diff --git a/clients/window.c b/clients/window.c
index 95796d4..dff204d 100644
--- a/clients/window.c
+++ b/clients/window.c
@@ -6464,6 +6464,47 @@ display_unwatch_fd(struct display *display, int fd)
 	epoll_ctl(display->epoll_fd, EPOLL_CTL_DEL, fd, NULL);
 }
 
+int
+display_poll(struct display *display, int timeout)
+{
+	struct task *task;
+	struct epoll_event ep[16];
+	int i, count, ret;
+
+	display->running = 1;
+	while (!wl_list_empty(&display->deferred_list)) {
+		task = container_of(display->deferred_list.prev,
+				    struct task, link);
+		wl_list_remove(&task->link);
+		task->run(task, 0);
+	}
+
+	wl_display_dispatch_pending(display->display);
+
+	if (!display->running)
+		return -1;
+
+	ret = wl_display_flush(display->display);
+	if (ret < 0 && errno == EAGAIN) {
+		ep[0].events =
+			EPOLLIN | EPOLLOUT | EPOLLERR | EPOLLHUP;
+		ep[0].data.ptr = &display->display_task;
+
+		epoll_ctl(display->epoll_fd, EPOLL_CTL_MOD,
+			  display->display_fd, &ep[0]);
+	} else if (ret < 0) {
+		return -1;
+	}
+
+	count = epoll_wait(display->epoll_fd,
+			   ep, ARRAY_LENGTH(ep), timeout);
+	for (i = 0; i < count; i++) {
+		task = ep[i].data.ptr;
+		task->run(task, ep[i].events);
+	}
+	return 0;
+}
+
 void
 display_run(struct display *display)
 {
diff --git a/clients/window.h b/clients/window.h
index 1ec9eac..199333b 100644
--- a/clients/window.h
+++ b/clients/window.h
@@ -159,6 +159,9 @@ display_watch_fd(struct display *display,
 void
 display_unwatch_fd(struct display *display, int fd);
 
+int
+display_poll(struct display *display, int timeout);
+
 void
 display_run(struct display *d);
 
-- 
2.7.4

