diff --git a/sys/v4l2/gstv4l2bufferpool.c b/sys/v4l2/gstv4l2bufferpool.c
index 2da5d50..bf23b41 100644
--- a/sys/v4l2/gstv4l2bufferpool.c
+++ b/sys/v4l2/gstv4l2bufferpool.c
@@ -574,7 +574,7 @@ gst_v4l2_buffer_pool_set_config (GstBufferPool * bpool, GstStructure * config)
       GST_DEBUG_OBJECT (pool, "no videometadata, checking strides %d and %u",
           stride, obj->bytesperline[i]);
 
-      if (stride != obj->bytesperline[i])
+      if (stride != obj->bytesperline[i] && GST_VIDEO_INFO_N_PLANES(&obj->info) == 0)
         goto missing_video_api;
     }
   }
diff --git a/sys/v4l2/gstv4l2src.c b/sys/v4l2/gstv4l2src.c
index 735fcfb..b14766c 100644
--- a/sys/v4l2/gstv4l2src.c
+++ b/sys/v4l2/gstv4l2src.c
@@ -90,6 +90,8 @@ enum
 
 static GstVideoFormat vin_format;         /*Check format in cap*/
 
+static gint  vin_width;
+static gint  vin_height;
 static guint gst_v4l2_signals[LAST_SIGNAL] = { 0 };
 
 GST_IMPLEMENT_V4L2_COLOR_BALANCE_METHODS (GstV4l2Src, gst_v4l2src);
@@ -494,6 +496,8 @@ gst_v4l2src_set_caps (GstBaseSrc * src, GstCaps * caps)
   /*Get format of cap to check in gst_v4l2src_decide_allocation function*/
   gst_video_info_from_caps (&info, caps);
   vin_format = GST_VIDEO_INFO_FORMAT (&info);
+  vin_width = GST_VIDEO_INFO_WIDTH (&info);
+  vin_height = GST_VIDEO_INFO_HEIGHT (&info);
 
   /* make sure the caps changed before doing anything */
   if (gst_v4l2_object_caps_equal (obj, caps))
@@ -882,6 +886,25 @@ gst_v4l2src_fill (GstPushSrc * src, GstBuffer * buf)
   GST_BUFFER_TIMESTAMP (buf) = timestamp;
   GST_BUFFER_DURATION (buf) = duration;
 
+  if(vin_format == GST_VIDEO_FORMAT_NV12)
+  {
+    /*data from VIN is still NV16 and need to be converted to NV12*/
+    GstMapInfo map;
+    guint8 * ptr_tmp;
+    gint i;
+    gsize size_new;
+
+    gst_buffer_map (buf, &map, GST_MAP_WRITE);
+    ptr_tmp = map.data;
+    ptr_tmp += vin_width * vin_height;
+    
+    for (i=1; i*2 < vin_height; i++)
+        memcpy((ptr_tmp + i*vin_width), (ptr_tmp + i*vin_width*2), vin_width);
+
+    size_new = map.size *3/4;
+    gst_buffer_unmap (buf, &map);
+    gst_buffer_set_size (buf, size_new);
+  }
   return ret;
 
   /* ERROR */
