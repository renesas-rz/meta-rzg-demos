From 3546137731ff5bf59ecdcf1fd438c49dfe9682d1 Mon Sep 17 00:00:00 2001
From: HungTran <hung.tran.jy@rvc.renesas.com>
Date: Thu, 4 Feb 2016 23:13:11 +0700
Subject: [PATCH 07/10] Adjust indent and trailing space for main.qml

This patch adjusts indent and remove trailing space for main.qml file
Before this patch:
- There are some mistakes in indent and some trailing white space
- Flexible resolution patch changes indent level of most of file.
But this indent change is not apply to prevent confusion
(if change indent, the Flexible resolution patch will raise
to 8000 lines!)

Again, this patch only adjust indent, not change any code.
The indentation adjust is done automatically by Qt Creator.
After that, it is copied to Geany to auto remove trailing
white space and change tab to space.

Signed-off-by: HungTran <hung.tran.jy@rvc.renesas.com>
---
 qml/simpleplayer/main.qml | 5212 ++++++++++++++++++++++-----------------------
 1 file changed, 2605 insertions(+), 2607 deletions(-)

diff --git a/qml/simpleplayer/main.qml b/qml/simpleplayer/main.qml
index d2c6e83..64a506d 100755
--- a/qml/simpleplayer/main.qml
+++ b/qml/simpleplayer/main.qml
@@ -69,12 +69,12 @@ Rectangle {
     property bool ontalking: false
 
     property bool onplayback: false
-    
+
     /*refer time data for recording file name*/
     property var locale: Qt.locale()
     property date currentTime : new Date()
     property string timeString
-    
+
     /*text image*/
     property string title_Cam1: "pics/Title_Cam1.png"
     property string title_Cam2: "pics/Title_Cam2.png"
@@ -169,12 +169,12 @@ Rectangle {
 
     /*stop state (list view)*/
     property int stop_state: 0
-    property int stop_state_normal: 0    
+    property int stop_state_normal: 0
     property int stop_state_inactive: 2
 
     /*rec state (list view)*/
     property int rec_state: 0
-    property int rec_state_normal: 0   
+    property int rec_state_normal: 0
     property int rec_state_pressed: 1
     property int rec_state_inactive: 2
 
@@ -192,7 +192,7 @@ Rectangle {
 
     /*rec3 state (list view)*/
     property int rec3_state: 0
-    property int rec3_state_normal: 0    
+    property int rec3_state_normal: 0
     property int rec3_state_pressed: 1
     property int rec3_state_inactive: 2
 
@@ -237,7 +237,7 @@ Rectangle {
     property int icon_inactive_state: 2
     property int icon_pressed_state: 3
     property int icon_pressed_bright_state: 4
-    
+
     /*Recording List*/
     property string selected_file: ""
     property bool isShowRecList: false
@@ -356,7 +356,7 @@ Rectangle {
             icon_pressed: "pics/rec4_ball_pressed.png"
             icon_pressed_bright: "pics/rec4_ball_pressed_bright.png"
             state: 0
-        }        
+        }
         ListElement {
             name: "3 color"
             icon: "pics/color_ball.png"
@@ -797,1179 +797,1179 @@ Rectangle {
 
 
         /* change resolution button */
-             Rectangle {
-                 id: btn_show
-                 x: (root.width)/(1280/10) + micro.width + (root.width)/(1280/20)
-                 y: (root.height)/(720/480)
-                 z: 10
-                 width: 60
-                 height: 60
-                 color: "transparent"
-                 Image {
-                     id: screen_icon
-                     source: "pics/screen_icon.png"
-                     anchors.fill: parent
-                 }
-                 MouseArea {
-                     id: btn_show_mouse_area
-                     anchors.fill: parent;
-                     onClicked: toggle()
-                     onPressed: {
-                         screen_icon.scale = 0.9
-                     }
-
-                     onReleased: {
-                         screen_icon.scale = 1.0
-                     }
-
-                 }
-             }
-
-             Rectangle{
-                 id: btn_4_3
-                 x: btn_show.x
-                 y: btn_show.y
-                 width: 60
-                 height: 60
-                 color: "transparent"
-                 z: 5
-
-                 Image {
-                     id: icon_4_3
-                     source: "pics/4_3_icon.png"
-                     anchors.fill: parent
-                     opacity: 1
-                 }
-
-                 MouseArea {
-                     id: btn_4_3_mouse_area
-                     anchors.fill: parent
-                     onClicked:{
-                         if(screenratio == 5/4)
-                            icon_5_4.source = "pics/5_4_icon.png"
-                         else if(screenratio == 16/10)
-                             icon_16_10.source = "pics/16_10_icon.png"
-                         else if(screenratio == 1)
-                             icon_full_screen.source = "pics/full_screen_icon.png"
-
-                         screenratio = 4/3
-                         scale_UI(screenratio)
-                         icon_4_3.source = "pics/4_3_icon_active.png"
-
-                        icon_4_3.opacity = 0.5
-                        icon_5_4.opacity = 0.5
-                        icon_16_10.opacity = 0.5
-                        icon_full_screen.opacity = 0.5
-                     }
-                     onPressed: {
-                         icon_4_3.scale = 0.9
-                     }
-
-                     onReleased: {
-                         icon_4_3.scale = 1.0
-                     }
-                 }
-             }
-
-             Rectangle{
-                 id: btn_5_4
-                 x: btn_show.x
-                 y: btn_show.y
-                 width: 60
-                 height: 60
-                 color: "transparent"
-                 z: 5
-                 Image {
-                     id: icon_5_4
-                     source: "pics/5_4_icon.png"
-                     anchors.fill: parent
-                     opacity: 1
-                 }
-
-                 MouseArea {
-                     id: btn_5_4_mouse_area
-                     anchors.fill: parent
-                     onClicked: {
-                         if(screenratio == 4/3)
-                            icon_4_3.source = "pics/4_3_icon.png"
-                         else if(screenratio == 16/10)
-                             icon_16_10.source = "pics/16_10_icon.png"
-                         else if(screenratio == 1)
-                             icon_full_screen.source = "pics/full_screen_icon.png"
-
-                         screenratio = 5/4
-                         scale_UI(screenratio)
-                         icon_5_4.source = "pics/5_4_icon_active.png"
-                         icon_4_3.opacity = 0.5
-                         icon_5_4.opacity = 0.5
-                         icon_16_10.opacity = 0.5
-                         icon_full_screen.opacity = 0.5
-                     }
-                     onPressed: {
-                         icon_5_4.scale = 0.9
-                     }
-
-                     onReleased: {
-                         icon_5_4.scale = 1.0
-                     }
-                 }
-             }
-
-             Rectangle{
-                 id: btn_16_10
-                 x: btn_show.x
-                 y: btn_show.y
-                 width: 60
-                 height: 60
-                 color: "transparent"
-                 z: 5
-                 Image {
-                     id: icon_16_10
-                     source: "pics/16_10_icon.png"
-                     anchors.fill: parent
-                     opacity: 1
-                 }
-
-                 MouseArea {
-                     id: btn_16_10_mouse_area
-                     anchors.fill: parent
-                     onClicked:{
-                         if(screenratio == 5/4)
-                            icon_5_4.source = "pics/5_4_icon.png"
-                         else if(screenratio == 4/3)
-                             icon_4_3.source = "pics/4_3_icon.png"
-                         else if(screenratio == 1)
-                             icon_full_screen.source = "pics/full_screen_icon.png"
-
-                         screenratio = 16/10
-                         scale_UI(screenratio)
-                         icon_16_10.source = "pics/16_10_icon_active.png"
-                         icon_4_3.opacity = 0.5
-                         icon_5_4.opacity = 0.5
-                         icon_16_10.opacity = 0.5
-                         icon_full_screen.opacity = 0.5
-                     }
-                     onPressed: {
-                         icon_16_10.scale = 0.9
-                     }
-
-                     onReleased: {
-                         icon_16_10.scale = 1.0
-                     }
-                 }
-             }
-
-             Rectangle{
-                 id: btn_full_screen
-                 x: btn_show.x
-                 y: btn_show.y
-                 width: 60
-                 height: 60
-                 color: "transparent"
-                 z: 5
-                 enabled: false
-                 Image {
-                     id: icon_full_screen
-                     source: "pics/full_screen_icon_active.png"
-                     anchors.fill: parent
-                     opacity: 1
-                 }
-
-                 MouseArea {
-                     id: btn_full_screen_mouse_area
-                     anchors.fill: parent
-                     onClicked: {
-                         if(screenratio == 5/4)
-                            icon_5_4.source = "pics/5_4_icon.png"
-                         else if(screenratio == 4/3)
-                             icon_4_3.source = "pics/4_3_icon.png"
-                         else if(screenratio == 16/10)
-                             icon_16_10.source = "pics/16_10_icon.png"
-
-                         screenratio = 1
-                         scale_UI(screenratio)
-                         icon_full_screen.source = "pics/full_screen_icon_active.png"
-                         icon_4_3.opacity = 0.5
-                         icon_5_4.opacity = 0.5
-                         icon_16_10.opacity = 0.5
-                         icon_full_screen.opacity = 0.5
-                     }
-                     onPressed: {
-                         icon_full_screen.scale = 0.9
-                     }
-
-                     onReleased: {
-                         icon_full_screen.scale = 1.0
-                     }
-                 }
-
-
-             }
-
-             states: [
-                     State {
-                         name: "on"
-                         PropertyChanges { target: btn_4_3; x: btn_show.x + 75 }
-                         PropertyChanges { target: btn_5_4; x: btn_4_3.x + 75 }
-                         PropertyChanges { target: btn_16_10; x: btn_5_4.x + 75 }
-                         PropertyChanges { target: btn_full_screen; x: btn_16_10.x + 75 }
-                         PropertyChanges { target: container; btn_state_on: true }
-                     },
-                     State {
-                         name: "off"
-                         PropertyChanges { target: btn_4_3; x: btn_show.x }
-                         PropertyChanges { target: btn_5_4; x: btn_show.x }
-                         PropertyChanges { target: btn_16_10; x: btn_show.x }
-                         PropertyChanges { target: btn_full_screen; x: btn_show.x }
-                         PropertyChanges { target: container; btn_state_on: false }
-                     }
-                 ]
-
-             transitions: Transition {
-                 NumberAnimation { properties: "x"; easing.type: Easing.InOutQuad; duration: 200 }
-             }
-
-             /* btn timmer */
-             Timer{
-                 id: btn_timer
-                 interval: 3000
-                 onTriggered: {
-                     btn_4_3.enabled = true;
-                     btn_5_4.enabled = true;
-                     btn_16_10.enabled = true;
-                     btn_full_screen.enabled = true;
-                     icon_4_3.opacity = 1
-                     icon_5_4.opacity = 1
-                     icon_16_10.opacity = 1
-                     icon_full_screen.opacity = 1
-
-                     if(screenratio == 4/3){
-                         btn_4_3.enabled = false;
-                     }
-                     if(screenratio == 5/4){
-                         btn_5_4.enabled = false;
-                     }
-                     if(screenratio == 16/10){
-                         btn_16_10.enabled = false;
-                     }
-                     if(screenratio == 1){
-                         btn_full_screen.enabled = false;
-                     }
-                 }
-             }
-
-
-    /*Load camera title image on display 1*/
-    Rectangle {
-        id: title_display1
-        color: "#00000000"
-        visible: false
-        x: root.width - title_image1.width - (root.width)/(1280/320) - (root.width)/(1280/20)
-        y: (root.height)/(720/10)
-        Image {
-           id: title_image1
-           source: "pics/Title_Cam1.png"
-       }
-    }
+        Rectangle {
+            id: btn_show
+            x: (root.width)/(1280/10) + micro.width + (root.width)/(1280/20)
+            y: (root.height)/(720/480)
+            z: 10
+            width: 60
+            height: 60
+            color: "transparent"
+            Image {
+                id: screen_icon
+                source: "pics/screen_icon.png"
+                anchors.fill: parent
+            }
+            MouseArea {
+                id: btn_show_mouse_area
+                anchors.fill: parent;
+                onClicked: toggle()
+                onPressed: {
+                    screen_icon.scale = 0.9
+                }
 
-    /*Load camera title image on display 2*/
-    Rectangle {
-        id: title_display2
-        color: "#00000000"
-        visible: false
-            x: title_display1.x + (root.width)/(1280/110); y: title_display1.y
-        Image {
-            id: title_image2
-            source: "pics/Title_Cam2.png"
-        }
-    }
+                onReleased: {
+                    screen_icon.scale = 1.0
+                }
 
-    /*Load camera title image on display 3*/
-    Rectangle {
-        id: title_display3
-        color: "#00000000"
-        visible: false
-            x: title_display2.x; y: title_display2.y + (root.height)/(720/236)
-        Image {
-            id: title_image3
-            source: "pics/Title_Cam3.png"
+            }
         }
-    }
 
-    /*Load camera title image on display 4*/
-    Rectangle {
-        id: title_display4
-        color: "#00000000"
-        visible: false
-            x: title_display3.x; y: title_display3.y + (root.height)/(720/237)
-        Image {
-            id: title_image4
-            source: "pics/Title_Cam4.png"
-        }
-    }
+        Rectangle{
+            id: btn_4_3
+            x: btn_show.x
+            y: btn_show.y
+            width: 60
+            height: 60
+            color: "transparent"
+            z: 5
 
-    /*background*/
-    Rectangle {
-       id: background
-       color: "transparent"
-       x: 0; y: 0
-           width: root.width; height: root.height
-       Image{
-           id: background_image
-           source: "pics/background_normal.png"
-               anchors.fill: parent
-       }
-    }
+            Image {
+                id: icon_4_3
+                source: "pics/4_3_icon.png"
+                anchors.fill: parent
+                opacity: 1
+            }
 
-    /*Micro controller*/
-    Rectangle {
-        id: micro
-        color: "transparent"
-        width: 60; height: 60
-            x: (root.width)/(1280/10)
-            y: (root.height)/(720/480)
-        z: 1
-        Image{
-            id: micro_image
-            source: image_micro_mute
+            MouseArea {
+                id: btn_4_3_mouse_area
                 anchors.fill: parent
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                //change micro state (normal <=> mute)
-                if (micro_state == micro_state_normal) {
-                    micro_image.source = image_micro_mute_bright
-                    micro_state = micro_state_mute
-                    //change to mute state
-                    austream_send.mute()
-                    austream_receive.mute()
-                } else {
-                    micro_image.source = image_micro_bright
-                    micro_state = micro_state_normal
-                    //change to talk state
-                    austream_send.talk()
-                    austream_receive.talk()
+                onClicked:{
+                    if(screenratio == 5/4)
+                        icon_5_4.source = "pics/5_4_icon.png"
+                    else if(screenratio == 16/10)
+                        icon_16_10.source = "pics/16_10_icon.png"
+                    else if(screenratio == 1)
+                        icon_full_screen.source = "pics/full_screen_icon.png"
+
+                    screenratio = 4/3
+                    scale_UI(screenratio)
+                    icon_4_3.source = "pics/4_3_icon_active.png"
+
+                    icon_4_3.opacity = 0.5
+                    icon_5_4.opacity = 0.5
+                    icon_16_10.opacity = 0.5
+                    icon_full_screen.opacity = 0.5
                 }
-            }
-            onEntered: {
-                if (micro_state == micro_state_normal) {
-                    micro_image.source = image_micro_bright
-                } else {
-                    micro_image.source = image_micro_mute_bright
+                onPressed: {
+                    icon_4_3.scale = 0.9
                 }
-            }
-            onExited: {
-                if (micro_state == micro_state_normal) {
-                    micro_image.source = image_micro
-                } else {
-                    micro_image.source = image_micro_mute
+
+                onReleased: {
+                    icon_4_3.scale = 1.0
                 }
             }
-            onPressed: {
-                micro_image.scale = 0.9
-            }
-            onReleased: {
-                micro_image.scale = 1.0
-            }
         }
-        Component.onCompleted: micro_state = micro_state_mute
-    }
 
-    /*Arrow controller*/
-    Rectangle {
-        id: arrow
-        color: "transparent"
-        width: 50; height: 50
-        x: (root.width)/(1280/10)
-        y: (root.height)/(720/480)
-        visible: false
-        Image{
-            id: arrow_image
-            source: image_arrow
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (arrow_state == arrow_state_normal) {
-                    arrow_image.source = image_arrow_mirror
-                    arrow_state = arrow_state_pressed
-                    play.visible = true
-                    stop.visible = true
-                    rec.visible = true
-                    if (play_state == play_state_inactive & set_state == set_state_inactive) {
-                        rec1.visible = true
-                        rec2.visible = true
-                        rec3.visible = true
-                        rec4.visible = true
-                    }
-                    set.visible = true
-                    if (set_state == set_state_pressed) {
-                        view.visible = true
-                        mail.visible = true
-                    }       
-                    color.visible = true
-                    micro.visible = true
-                }
-                else {
-                    arrow_image.source = image_arrow
-                    arrow_state = arrow_state_normal
-                    set_to_hide_ball_list()
-                    micro.visible = false
-                }
+        Rectangle{
+            id: btn_5_4
+            x: btn_show.x
+            y: btn_show.y
+            width: 60
+            height: 60
+            color: "transparent"
+            z: 5
+            Image {
+                id: icon_5_4
+                source: "pics/5_4_icon.png"
+                anchors.fill: parent
+                opacity: 1
             }
-            onEntered: {
-                if (arrow_state == arrow_state_normal) {
-                    arrow_image.source = image_arrow_bright
-                } else {
-                    arrow_image.source = image_arrow_mirror_bright
+
+            MouseArea {
+                id: btn_5_4_mouse_area
+                anchors.fill: parent
+                onClicked: {
+                    if(screenratio == 4/3)
+                        icon_4_3.source = "pics/4_3_icon.png"
+                    else if(screenratio == 16/10)
+                        icon_16_10.source = "pics/16_10_icon.png"
+                    else if(screenratio == 1)
+                        icon_full_screen.source = "pics/full_screen_icon.png"
+
+                    screenratio = 5/4
+                    scale_UI(screenratio)
+                    icon_5_4.source = "pics/5_4_icon_active.png"
+                    icon_4_3.opacity = 0.5
+                    icon_5_4.opacity = 0.5
+                    icon_16_10.opacity = 0.5
+                    icon_full_screen.opacity = 0.5
                 }
-            }
-            onExited: {
-                if (arrow_state == arrow_state_normal) {
-                    arrow_image.source = image_arrow
-                } else {
-                    arrow_image.source = image_arrow_mirror
+                onPressed: {
+                    icon_5_4.scale = 0.9
                 }
-            }
-            onPressed: {
-                if (arrow_state == arrow_state_normal) {
-                    arrow_image.source = image_arrow_bright
-                } else {
-                    arrow_image.source = image_arrow_mirror_bright
+
+                onReleased: {
+                    icon_5_4.scale = 1.0
                 }
-                arrow_image.scale = 0.9
             }
-            onReleased: {
-                arrow_image.scale = 1.0
-            }
-        }
-    }
-
-     /*Play controller (list view)*/
-     Rectangle {
-         id: play
-         color: "transparent"
-         width: 50; height: 50
-         x: (root.width)/(1280/15)
-         y: (root.height)/(720/180)
-         visible: false
-         Image{
-             id: play_image
-             width: 50; height: 50
-             source: ""
-         }
-         MouseArea {
-             anchors.fill: parent
-             hoverEnabled: true
-             onClicked: {
-                 if (play_state == play_state_normal) {
-                     set_ball_normal_list_01(list_state,play_image,5)
-                     play_state = play_state_pressed
-                     set_rec_ball_inactive_list()
-                     set_set_ball_inactive_list()
-                     set_color_ball_inactive_list()
-                     //playback play
-                     if (onplayback == true) {
-                         mediaplayer.play()
-                     } else {
-                         isShowRecList = true
-                     }
-                 }
-                 else if (play_state == play_state_pressed) {
-                     set_ball_normal_list(list_state,play_image,5)
-                     play_state = play_state_normal
-                     //playback pause
-                     if(onplayback == true){
-                         mediaplayer.pause()
-                     }
-                 }
-             }
-             onEntered: {
-                 if (play_state == play_state_normal) {
-                     set_ball_bright_list(list_state,play_image,5)
-                 }
-                 else if (play_state == play_state_pressed) {
-                     set_ball_bright_list_01(list_state,play_image,5)
-                 }
-             }
-             onExited: {
-                 if (play_state == play_state_normal) {
-                     set_ball_normal_list(list_state,play_image,5)
-                 }
-                 else if (play_state == play_state_pressed) {
-                     set_ball_normal_list_01(list_state,play_image,5)
-                 }
-             }
-             onPressed: {
-                 if (play_state != play_state_inactive) {
-                     play_image.scale = 0.9
-                 }
-             }
-             onReleased: {                 
-                 play_image.scale = 1.0
-             }
         }
-    }
-
-    /*Stop controller (list view)*/
-     Rectangle {
-         id: stop
-         color: "transparent"
-         width: 50; height: 50
-         x: (root.width)/(1280/15)
-         y: (root.height)/(720/230)
-         visible: false
-         Image{
-             id: stop_image
-             width: 50; height: 50
-             source: ""
-         }
-         MouseArea {
-             anchors.fill: parent
-             hoverEnabled: true
-             onClicked: {
-                 if (stop_state == stop_state_normal) {
-                     set_to_active_all_list()
-                     //playback stop
-                     if(onplayback == true){
-                         mediaplayer.stop()
-                     }
-                     set_to_active_all(stop_id)
-                 }
-             }
-             onEntered: {
-                  if (stop_state == stop_state_normal) {
-                      set_ball_bright_list(list_state,stop_image,4)
-                  }
-              }
-              onExited: {
-                 if (stop_state == stop_state_normal) {
-                     set_ball_normal_list(list_state,stop_image,4)
-                  }
-              }
-              onPressed: {
-                  if (stop_state != stop_state_inactive) {
-                      stop_image.scale = 0.9
-                  }
-              }
-              onReleased: {
-                  stop_image.scale = 1.0
-              }
-         }
-    }
 
-    /*Rec controller (list view)*/
-    Rectangle {
-        id: rec
-        color: "transparent"
-        width: 50; height: 50
-        x: (root.width)/(1280/15)
-        y: (root.height)/(720/280)
-        visible: false
-        Image{
-            id: rec_image
-            source: ""
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (rec_state == rec_state_normal) {
-                    play_image.source = list_icon_red.get(5).icon_inactive
-                    play_state = play_state_inactive
-                    stop_image.source = list_icon_red.get(4).icon_inactive
-                    stop_state = stop_state_inactive
-                    set_set_ball_inactive_list()
-                    rec1.visible = true
-                    rec2.visible = true
-                    rec3.visible = true
-                    rec4.visible = true
-                    rec_state = rec_state_pressed
-                    set_color_ball_inactive_list()
-                    set_to_active_all_rec_list()
-                }
-                else if (rec_state == rec_state_pressed) {                    
-                    rec1.visible = false
-                    rec2.visible = false
-                    rec3.visible = false
-                    rec4.visible = false
-                    set_to_active_all_list()
-               }
+        Rectangle{
+            id: btn_16_10
+            x: btn_show.x
+            y: btn_show.y
+            width: 60
+            height: 60
+            color: "transparent"
+            z: 5
+            Image {
+                id: icon_16_10
+                source: "pics/16_10_icon.png"
+                anchors.fill: parent
+                opacity: 1
             }
-            onEntered: {
-                if (rec_state != rec_state_inactive) {
-                    set_ball_bright_list_01(list_state,rec_image,0)
+
+            MouseArea {
+                id: btn_16_10_mouse_area
+                anchors.fill: parent
+                onClicked:{
+                    if(screenratio == 5/4)
+                        icon_5_4.source = "pics/5_4_icon.png"
+                    else if(screenratio == 4/3)
+                        icon_4_3.source = "pics/4_3_icon.png"
+                    else if(screenratio == 1)
+                        icon_full_screen.source = "pics/full_screen_icon.png"
+
+                    screenratio = 16/10
+                    scale_UI(screenratio)
+                    icon_16_10.source = "pics/16_10_icon_active.png"
+                    icon_4_3.opacity = 0.5
+                    icon_5_4.opacity = 0.5
+                    icon_16_10.opacity = 0.5
+                    icon_full_screen.opacity = 0.5
                 }
-            }
-            onExited: {
-                if (rec_state != rec_state_inactive) {
-                    set_ball_normal_list_01(list_state,rec_image,0)
+                onPressed: {
+                    icon_16_10.scale = 0.9
                 }
-            }
-            onPressed: {
-                if (rec_state != rec_state_inactive) {
-                    rec_image.scale = 0.9
+
+                onReleased: {
+                    icon_16_10.scale = 1.0
                 }
             }
-            onReleased: {
-                rec_image.scale = 1.0
-            }
         }
-    }
 
-    /*Rec1 controller (list view)*/
-    Rectangle {
-        id: rec1
-        color: "transparent"
-        width: 50; height: 50
-        x: (root.width)/(1280/70)
-        y: (root.height)/(720/205)
-        visible: false
-        Image{
-            id: rec1_image
-            width: 50; height: 50
-            source: ""
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (rec1_state == rec1_state_normal) {
-                    set_rec_ball_inactive_list()
-                    rec1_image.source = list_icon_red.get(6).icon_pressed
-                    rec2_image.source = list_icon_red.get(0).icon_inactive
-                    rec3_image.source = list_icon_red.get(1).icon_inactive
-                    rec4_image.source = list_icon_red.get(2).icon_inactive
-                    rec1_state = rec1_state_pressed
-                    rec2_state = rec2_state_inactive
-                    rec3_state = rec3_state_inactive
-                    rec4_state = rec4_state_inactive
-
-                    //recording camera 1
-                    /* Generate different name */
-                    currentTime = new Date()
-                    timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-                    mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-                    mp4_recorder.usrcPort = camera1_port
-                    mp4_recorder.start()
-                }
-                else if (rec1_state == rec1_state_pressed) {
-                    set_to_active_all_rec_list()
-
-                    //stop recording camera1
-                    mp4_recorder.stop()
-                }
-            }
-            onEntered: {
-                if (rec1_state == rec1_state_normal) {
-                    set_ball_bright_list(list_state,rec1_image,6)
-                }
-                else if (rec1_state == rec1_state_pressed) {
-                    rec1_image.source = list_icon_red.get(6).icon_pressed_bright
-                }
+        Rectangle{
+            id: btn_full_screen
+            x: btn_show.x
+            y: btn_show.y
+            width: 60
+            height: 60
+            color: "transparent"
+            z: 5
+            enabled: false
+            Image {
+                id: icon_full_screen
+                source: "pics/full_screen_icon_active.png"
+                anchors.fill: parent
+                opacity: 1
             }
-            onExited: {
-                if (rec1_state == rec1_state_normal) {
-                    set_ball_normal_list(list_state,rec1_image,6)
+
+            MouseArea {
+                id: btn_full_screen_mouse_area
+                anchors.fill: parent
+                onClicked: {
+                    if(screenratio == 5/4)
+                        icon_5_4.source = "pics/5_4_icon.png"
+                    else if(screenratio == 4/3)
+                        icon_4_3.source = "pics/4_3_icon.png"
+                    else if(screenratio == 16/10)
+                        icon_16_10.source = "pics/16_10_icon.png"
+
+                    screenratio = 1
+                    scale_UI(screenratio)
+                    icon_full_screen.source = "pics/full_screen_icon_active.png"
+                    icon_4_3.opacity = 0.5
+                    icon_5_4.opacity = 0.5
+                    icon_16_10.opacity = 0.5
+                    icon_full_screen.opacity = 0.5
                 }
-                else if (rec1_state == rec1_state_pressed) {
-                    rec1_image.source = list_icon_red.get(6).icon_pressed
+                onPressed: {
+                    icon_full_screen.scale = 0.9
                 }
-            }
-            onPressed: {
-                if (rec1_state != rec1_state_inactive) {
-                    rec1_image.scale = 0.9
+
+                onReleased: {
+                    icon_full_screen.scale = 1.0
                 }
             }
-            onReleased: {
-                rec1_image.scale = 1.0
-            }
+
+
         }
-    }
 
-    /*Rec2 controller (list view)*/
-    Rectangle {
-        id: rec2
-        color: "transparent"
-        width: 50; height: 50
-        x: (root.width)/(1280/70)
-        y: (root.height)/(720/255)
-        visible: false
-        Image{
-            id: rec2_image
-            width: 50; height: 50
-            source: ""
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (rec2_state == rec2_state_normal) {
-                    set_rec_ball_inactive_list()
-                    rec1_image.source = list_icon_red.get(6).icon_inactive
-                    rec2_image.source = list_icon_red.get(0).icon_pressed
-                    rec3_image.source = list_icon_red.get(1).icon_inactive
-                    rec4_image.source = list_icon_red.get(2).icon_inactive
-                    rec1_state = rec1_state_inactive
-                    rec2_state = rec2_state_pressed
-                    rec3_state = rec3_state_inactive
-                    rec4_state = rec2_state_inactive
-
-                    //recording camera 2
-                    /* Generate different name */
-                    currentTime = new Date()
-                    timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-                    mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-                    mp4_recorder.usrcPort = camera2_port
-                    mp4_recorder.start()
-                }
-                else if (rec2_state == rec2_state_pressed) {
-                    set_to_active_all_rec_list()
-
-                    //stop recording camera2
-                    mp4_recorder.stop()
-                }
+        states: [
+            State {
+                name: "on"
+                PropertyChanges { target: btn_4_3; x: btn_show.x + 75 }
+                PropertyChanges { target: btn_5_4; x: btn_4_3.x + 75 }
+                PropertyChanges { target: btn_16_10; x: btn_5_4.x + 75 }
+                PropertyChanges { target: btn_full_screen; x: btn_16_10.x + 75 }
+                PropertyChanges { target: container; btn_state_on: true }
+            },
+            State {
+                name: "off"
+                PropertyChanges { target: btn_4_3; x: btn_show.x }
+                PropertyChanges { target: btn_5_4; x: btn_show.x }
+                PropertyChanges { target: btn_16_10; x: btn_show.x }
+                PropertyChanges { target: btn_full_screen; x: btn_show.x }
+                PropertyChanges { target: container; btn_state_on: false }
             }
-            onEntered: {
-                if (rec2_state == rec2_state_normal) {
-                    set_ball_bright_list(list_state,rec2_image,0)
+        ]
+
+        transitions: Transition {
+            NumberAnimation { properties: "x"; easing.type: Easing.InOutQuad; duration: 200 }
+        }
+
+        /* btn timmer */
+        Timer{
+            id: btn_timer
+            interval: 3000
+            onTriggered: {
+                btn_4_3.enabled = true;
+                btn_5_4.enabled = true;
+                btn_16_10.enabled = true;
+                btn_full_screen.enabled = true;
+                icon_4_3.opacity = 1
+                icon_5_4.opacity = 1
+                icon_16_10.opacity = 1
+                icon_full_screen.opacity = 1
+
+                if(screenratio == 4/3){
+                    btn_4_3.enabled = false;
                 }
-                else if (rec2_state == rec2_state_pressed) {
-                    rec2_image.source = list_icon_red.get(0).icon_pressed_bright
+                if(screenratio == 5/4){
+                    btn_5_4.enabled = false;
                 }
-            }
-            onExited: {
-                if (rec2_state == rec2_state_normal) {
-                    set_ball_normal_list(list_state,rec2_image,0)
+                if(screenratio == 16/10){
+                    btn_16_10.enabled = false;
                 }
-                else if (rec2_state == rec2_state_pressed) {
-                    rec2_image.source = list_icon_red.get(0).icon_pressed
+                if(screenratio == 1){
+                    btn_full_screen.enabled = false;
                 }
             }
-            onPressed: {
-                if (rec2_state != rec2_state_inactive) {
-                    rec2_image.scale = 0.9
-                }
+        }
+
+
+        /*Load camera title image on display 1*/
+        Rectangle {
+            id: title_display1
+            color: "#00000000"
+            visible: false
+            x: root.width - title_image1.width - (root.width)/(1280/320) - (root.width)/(1280/20)
+            y: (root.height)/(720/10)
+            Image {
+                id: title_image1
+                source: "pics/Title_Cam1.png"
             }
-            onReleased: {
-                rec2_image.scale = 1.0
+        }
+
+        /*Load camera title image on display 2*/
+        Rectangle {
+            id: title_display2
+            color: "#00000000"
+            visible: false
+            x: title_display1.x + (root.width)/(1280/110); y: title_display1.y
+            Image {
+                id: title_image2
+                source: "pics/Title_Cam2.png"
             }
         }
-    }
 
-    /*Rec3 controller (list view)*/
-    Rectangle {
-        id: rec3
-        color: "transparent"
-        width: 50; height: 50
-        x: (root.width)/(1280/70)
-        y: (root.height)/(720/305)
-        visible: false
-        Image{
-           id: rec3_image
-           width: 50; height: 50
-           source: ""
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (rec3_state == rec3_state_normal) {
-                    set_rec_ball_inactive_list()
-                    rec1_image.source = list_icon_red.get(6).icon_inactive
-                    rec2_image.source = list_icon_red.get(0).icon_inactive
-                    rec3_image.source = list_icon_red.get(1).icon_pressed
-                    rec4_image.source = list_icon_red.get(2).icon_inactive
-                    rec1_state = rec1_state_inactive
-                    rec2_state = rec2_state_inactive
-                    rec3_state = rec3_state_pressed
-                    rec4_state = rec4_state_inactive
-
-                    //recording camera3
-                    /* Generate different name */
-                    currentTime = new Date()
-                    timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-                    mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-                    mp4_recorder.usrcPort = camera3_port
-                    mp4_recorder.start()
-                }
-                else if (rec3_state == rec3_state_pressed) {
-                    set_to_active_all_rec_list()
-
-                    //stop recording camera3
-                    mp4_recorder.stop()
-                }
+        /*Load camera title image on display 3*/
+        Rectangle {
+            id: title_display3
+            color: "#00000000"
+            visible: false
+            x: title_display2.x; y: title_display2.y + (root.height)/(720/236)
+            Image {
+                id: title_image3
+                source: "pics/Title_Cam3.png"
+            }
+        }
+
+        /*Load camera title image on display 4*/
+        Rectangle {
+            id: title_display4
+            color: "#00000000"
+            visible: false
+            x: title_display3.x; y: title_display3.y + (root.height)/(720/237)
+            Image {
+                id: title_image4
+                source: "pics/Title_Cam4.png"
+            }
+        }
+
+        /*background*/
+        Rectangle {
+            id: background
+            color: "transparent"
+            x: 0; y: 0
+            width: root.width; height: root.height
+            Image{
+                id: background_image
+                source: "pics/background_normal.png"
+                anchors.fill: parent
+            }
+        }
+
+        /*Micro controller*/
+        Rectangle {
+            id: micro
+            color: "transparent"
+            width: 60; height: 60
+            x: (root.width)/(1280/10)
+            y: (root.height)/(720/480)
+            z: 1
+            Image{
+                id: micro_image
+                source: image_micro_mute
+                anchors.fill: parent
             }
-            onEntered: {
-                if (rec3_state == rec3_state_normal) {
-                   set_ball_bright_list(list_state,rec3_image,1)
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    //change micro state (normal <=> mute)
+                    if (micro_state == micro_state_normal) {
+                        micro_image.source = image_micro_mute_bright
+                        micro_state = micro_state_mute
+                        //change to mute state
+                        austream_send.mute()
+                        austream_receive.mute()
+                    } else {
+                        micro_image.source = image_micro_bright
+                        micro_state = micro_state_normal
+                        //change to talk state
+                        austream_send.talk()
+                        austream_receive.talk()
+                    }
                 }
-                else if (rec3_state == rec3_state_pressed) {
-                    rec3_image.source = list_icon_red.get(1).icon_pressed_bright
+                onEntered: {
+                    if (micro_state == micro_state_normal) {
+                        micro_image.source = image_micro_bright
+                    } else {
+                        micro_image.source = image_micro_mute_bright
+                    }
                 }
-            }
-            onExited: {
-                if (rec3_state == rec3_state_normal) {
-                    set_ball_normal_list(list_state,rec3_image,1)
+                onExited: {
+                    if (micro_state == micro_state_normal) {
+                        micro_image.source = image_micro
+                    } else {
+                        micro_image.source = image_micro_mute
+                    }
                 }
-                else if (rec3_state == rec3_state_pressed) {
-                    rec3_image.source = list_icon_red.get(1).icon_pressed
+                onPressed: {
+                    micro_image.scale = 0.9
                 }
-            }
-            onPressed: {
-                if (rec3_state != rec3_state_inactive) {
-                    rec3_image.scale = 0.9
+                onReleased: {
+                    micro_image.scale = 1.0
                 }
             }
-            onReleased: {
-                rec3_image.scale = 1.0
-            }
+            Component.onCompleted: micro_state = micro_state_mute
         }
-    }
 
-    /*Rec4 controller (list view)*/
-    Rectangle {
-        id: rec4
-        color: "transparent"
-        width: 50; height: 50
-        x: (root.width)/(1280/70)
-        y: (root.height)/(720/355)
-        visible: false
-        Image{
-            id: rec4_image
+        /*Arrow controller*/
+        Rectangle {
+            id: arrow
+            color: "transparent"
             width: 50; height: 50
-            source: ""
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (rec4_state == rec4_state_normal) {
-                    set_rec_ball_inactive_list()
-                    rec1_image.source = list_icon_red.get(6).icon_inactive
-                    rec2_image.source = list_icon_red.get(0).icon_inactive
-                    rec3_image.source = list_icon_red.get(1).icon_inactive
-                    rec4_image.source = list_icon_red.get(2).icon_pressed
-                    rec1_state = rec1_state_inactive
-                    rec2_state = rec2_state_inactive
-                    rec3_state = rec3_state_inactive
-                    rec4_state = rec4_state_pressed
-
-                    //recording camera4
-                    /* Generate different name */
-                    currentTime = new Date()
-                    timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-                    mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-                    mp4_recorder.usrcPort = camera4_port
-                    mp4_recorder.start()
-                }
-                else if (rec4_state == rec4_state_pressed) {
-                    set_to_active_all_rec_list()
-
-                    //stop recording camera4
-                    mp4_recorder.stop()
-                }
+            x: (root.width)/(1280/10)
+            y: (root.height)/(720/480)
+            visible: false
+            Image{
+                id: arrow_image
+                source: image_arrow
             }
-            onEntered: {
-                if (rec4_state == rec4_state_normal) {
-                    set_ball_bright_list(list_state,rec4_image,2)
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (arrow_state == arrow_state_normal) {
+                        arrow_image.source = image_arrow_mirror
+                        arrow_state = arrow_state_pressed
+                        play.visible = true
+                        stop.visible = true
+                        rec.visible = true
+                        if (play_state == play_state_inactive & set_state == set_state_inactive) {
+                            rec1.visible = true
+                            rec2.visible = true
+                            rec3.visible = true
+                            rec4.visible = true
+                        }
+                        set.visible = true
+                        if (set_state == set_state_pressed) {
+                            view.visible = true
+                            mail.visible = true
+                        }
+                        color.visible = true
+                        micro.visible = true
+                    }
+                    else {
+                        arrow_image.source = image_arrow
+                        arrow_state = arrow_state_normal
+                        set_to_hide_ball_list()
+                        micro.visible = false
+                    }
                 }
-                else if (rec4_state == rec4_state_pressed) {
-                    rec4_image.source = list_icon_red.get(2).icon_pressed_bright
+                onEntered: {
+                    if (arrow_state == arrow_state_normal) {
+                        arrow_image.source = image_arrow_bright
+                    } else {
+                        arrow_image.source = image_arrow_mirror_bright
+                    }
                 }
-            }
-            onExited: {
-                if (rec4_state == rec4_state_normal) {
-                    set_ball_normal_list(list_state,rec4_image,2)
+                onExited: {
+                    if (arrow_state == arrow_state_normal) {
+                        arrow_image.source = image_arrow
+                    } else {
+                        arrow_image.source = image_arrow_mirror
+                    }
                 }
-                else if (rec4_state == rec4_state_pressed) {
-                    rec4_image.source = list_icon_red.get(2).icon_pressed
+                onPressed: {
+                    if (arrow_state == arrow_state_normal) {
+                        arrow_image.source = image_arrow_bright
+                    } else {
+                        arrow_image.source = image_arrow_mirror_bright
+                    }
+                    arrow_image.scale = 0.9
                 }
-            }
-            onPressed: {
-                if (rec4_state != rec4_state_inactive) {
-                    rec4_image.scale = 0.9
+                onReleased: {
+                    arrow_image.scale = 1.0
                 }
             }
-            onReleased: {
-                rec4_image.scale = 1.0
-            }
         }
-    }
 
-    /*view controller*/
-    Rectangle {
-        id: view
-        color: "transparent"
-        width: 50; height: 50
-        x:(root.width)/(1280/30)
-        y:(root.height)/(720/120)
-        z:1
-        visible: false
-        property var mode: 1
-        Image{
-            id: view_image
-            source: list_icon_red_01.get(2).icon_normal
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: { 
-                if (view.mode == 1) {
-                    view.mode = 2
-                    menu.visible = false
-                    temp_status.visible = false
-                    micro.visible = false
-                    micro.x = (root.width)/(1280/15)
-                    micro.y = (root.height)/(720/430)
-                    view.visible = false
-                    view.x = (root.width)/(1280/70)
-                    view.y = (root.height)/(720/305)
-                    mail.visible = false
-                    mail.x = (root.width)/(1280/70)
-                    mail.y = (root.height)/(720/355)
-                    arrow_state = arrow_state_normal
-                    arrow_image.source = image_arrow
-                    arrow.visible = true
-                    switch (pathv.model) {
-                        case list_icon_red: {
-                            list_state = list_state_red
-                            break
-                        }
-                        case list_icon_blue: {
-                            list_state = list_state_blue
-                            break
-                        }
-                        case list_icon_green: {
-                            list_state = list_state_green
-                            break
-                        }
-                        case list_icon_orange: {
-                            list_state = list_state_orange
-                            break
+        /*Play controller (list view)*/
+        Rectangle {
+            id: play
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/15)
+            y: (root.height)/(720/180)
+            visible: false
+            Image{
+                id: play_image
+                width: 50; height: 50
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (play_state == play_state_normal) {
+                        set_ball_normal_list_01(list_state,play_image,5)
+                        play_state = play_state_pressed
+                        set_rec_ball_inactive_list()
+                        set_set_ball_inactive_list()
+                        set_color_ball_inactive_list()
+                        //playback play
+                        if (onplayback == true) {
+                            mediaplayer.play()
+                        } else {
+                            isShowRecList = true
                         }
-                        case list_icon_yellow: {
-                            list_state = list_state_yellow
-                            break
+                    }
+                    else if (play_state == play_state_pressed) {
+                        set_ball_normal_list(list_state,play_image,5)
+                        play_state = play_state_normal
+                        //playback pause
+                        if(onplayback == true){
+                            mediaplayer.pause()
                         }
                     }
-                    set_to_active_all_list()
-                    set_state = set_state_normal
-                }
-                else if (view.mode == 2) {
-                    view.mode = 1
-                    menu.visible = true
-                    pathv.visible = true
-                    temp_status.visible = true
-                    micro.visible = true
-                    micro.x = (root.width)/(1280/10)
-                    micro.y = (root.height)/(720/480)
-                    view.x = (root.width)/(1280/30)
-                    view.y = (root.height)/(720/120)
-                    mail.x = (root.width)/(1280/80)
-                    mail.y = (root.height)/(720/120)
-                    set_to_hide_ball_list()
-                    arrow.visible = false
-                    set_state = set_state_normal
-                    if (display2_state == camera1_state) {
-                    micro.x = (root.width)/(1280/970)
-                    micro.y = (root.height)/(720/180)
+                }
+                onEntered: {
+                    if (play_state == play_state_normal) {
+                        set_ball_bright_list(list_state,play_image,5)
                     }
-                    if (display3_state == camera1_state) {
-                    micro.x = (root.width)/(1280/970)
-                    micro.y = (root.height)/(720/420)
+                    else if (play_state == play_state_pressed) {
+                        set_ball_bright_list_01(list_state,play_image,5)
                     }
-                    if (display4_state == camera1_state) {
-                    micro.x = (root.width)/(1280/970)
-                    micro.y = (root.height)/(720/655)
+                }
+                onExited: {
+                    if (play_state == play_state_normal) {
+                        set_ball_normal_list(list_state,play_image,5)
                     }
-                    set_ball_normal_list_01(list_state,view_image,2)
-                    switch (list_state) {
-                        case list_state_red: {
-                            pathv.model = list_icon_red
-                            status_text1.source = text_live_red
-                            break
-                        }
-                        case list_state_blue: {
-                            pathv.model = list_icon_blue
-                            status_text1.source = text_live_blue
-                            break
-                        }
-                        case list_state_green: {
-                            pathv.model = list_icon_green
-                            status_text1.source = text_live_green
-                            break
-                        }
-                        case list_state_orange: {
-                            pathv.model = list_icon_orange
-                            status_text1.source = text_live_orange
-                            break
-                        }
-                        case list_state_yellow: {
-                            pathv.model = list_icon_yellow
-                            status_text1.source = text_live_yellow
-                            break
-                        }
+                    else if (play_state == play_state_pressed) {
+                        set_ball_normal_list_01(list_state,play_image,5)
                     }
                 }
-            }
-            onEntered: {
-                if (view.mode == 1) {
-                    set_ball_bright_list_02(pathv.model,view_image,2)
-                }
-                else if (view.mode == 2) {
-                    set_ball_bright_list_01(list_state,view_image,3)
-                }
-            }
-            onExited: {
-                if (view.mode == 1) {
-                    set_ball_normal_list_02(pathv.model,view_image,2)
+                onPressed: {
+                    if (play_state != play_state_inactive) {
+                        play_image.scale = 0.9
+                    }
                 }
-                else if (view.mode == 2) {
-                    set_ball_normal_list_01(list_state,view_image,3)
+                onReleased: {
+                    play_image.scale = 1.0
                 }
             }
-            onPressed: {
-                view_image.scale = 0.9
-            }
-            onReleased: {
-                view_image.scale = 1.0
-            }
         }
-    }
 
-    /*Mail controller*/
-    Rectangle {
-          id: mail
-          color: "transparent"
-          width: 50; height: 50
-          x:(root.width)/(1280/80)
-          y:(root.height)/(720/120)
-          z:1
-          visible: false
-          Image{
-              id: mail_image
-              source: list_icon_red_01.get(4).icon_normal
-          }
-          MouseArea {
-              anchors.fill: parent
-              hoverEnabled: true
-              onClicked: {
-                  menu.visible = false
-                  temp_status.visible = false
-                  micro.visible = false
-                  arrow.visible = false
-                  set_to_hide_ball_list()
-                  textfield.text = ""
-                  mail_input.visible = true
-             }
-              onEntered: {
-                  if (view.mode == 1) {
-                      set_ball_bright_list_02(pathv.model,mail_image,4)
-                  }
-                  else if (view.mode == 2) {
-                      set_ball_bright_list_01(list_state,mail_image,4)
-                  }
-              }
-              onExited: {
-                  if (view.mode == 1) {
-                      set_ball_normal_list_02(pathv.model,mail_image,4)
-                  }
-                  else if (view.mode == 2) {
-                      set_ball_normal_list_01(list_state,mail_image,4)
-                  }
-              }
-              onPressed: {
-                  mail_image.scale = 0.9
-              }
-              onReleased: {
-                  mail_image.scale = 1.0
-              }
-          }
-      }
-
-    /*Set controller (list view)*/
-    Rectangle {
-         id: set
-         color: "transparent"
-         width: 50; height: 50
-         x: (root.width)/(1280/15)
-         y: (root.height)/(720/330)
-         visible: false
-         Image{
-             id: set_image
-             source: ""
-         }
-         MouseArea {
-             anchors.fill: parent
-             hoverEnabled: true
-             onClicked: {
-                 if (set_state == set_state_normal) {                     
-                     set_state = set_state_pressed
-                     play_image.source = list_icon_red.get(5).icon_inactive
-                     play_state = play_state_inactive
-                     stop_image.source = list_icon_red.get(4).icon_inactive
-                     stop_state = stop_state_inactive
-                     set_rec_ball_inactive_list()
-                     set_color_ball_inactive_list()
-                     mail.visible = true
-                     view.visible = true
-                     set_ball_normal_list_01(list_state,view_image,3)
-                     set_ball_normal_list_01(list_state,mail_image,4)
-                 }
-                 else if (set_state == set_state_pressed)  {
-                     mail.visible = false
-                     view.visible = false
-                     set_to_active_all_list()
-                 }
-             }
-             onEntered: {
-                 if (set_state != set_state_inactive) {
-                     set_ball_bright_list_01(list_state,set_image,1)
-                 }
-             }
-             onExited: {
-                 if (set_state != set_state_inactive) {
-                     set_ball_normal_list_01(list_state,set_image,1)
-                 }
-             }
-             onPressed: {
-                 if (set_state != set_state_inactive) {
-                     set_image.scale = 0.9
-                 }
-             }
-             onReleased: {
-                 set_image.scale = 1.0
-             }
-         }
-     }
-
-    /*Color controller (list view)*/
-    Rectangle {
-        id: color
-        color: "transparent"
-        width: 50; height: 50
-        x: (root.width)/(1280/15)
-        y: (root.height)/(720/380)
-        visible: false
-        Image{
-            id: color_image
+        /*Stop controller (list view)*/
+        Rectangle {
+            id: stop
+            color: "transparent"
             width: 50; height: 50
-            source: ""
-        }
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (color_state == color_state_normal) {
-                    switch (list_state) {
-                        case list_state_red: {
-                            play_image.source = list_icon_blue.get(5).icon_normal
-                            stop_image.source = list_icon_blue.get(4).icon_normal
-                            rec_image.source = list_icon_blue_01.get(0).icon_normal
+            x: (root.width)/(1280/15)
+            y: (root.height)/(720/230)
+            visible: false
+            Image{
+                id: stop_image
+                width: 50; height: 50
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (stop_state == stop_state_normal) {
+                        set_to_active_all_list()
+                        //playback stop
+                        if(onplayback == true){
+                            mediaplayer.stop()
+                        }
+                        set_to_active_all(stop_id)
+                    }
+                }
+                onEntered: {
+                    if (stop_state == stop_state_normal) {
+                        set_ball_bright_list(list_state,stop_image,4)
+                    }
+                }
+                onExited: {
+                    if (stop_state == stop_state_normal) {
+                        set_ball_normal_list(list_state,stop_image,4)
+                    }
+                }
+                onPressed: {
+                    if (stop_state != stop_state_inactive) {
+                        stop_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    stop_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Rec controller (list view)*/
+        Rectangle {
+            id: rec
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/15)
+            y: (root.height)/(720/280)
+            visible: false
+            Image{
+                id: rec_image
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (rec_state == rec_state_normal) {
+                        play_image.source = list_icon_red.get(5).icon_inactive
+                        play_state = play_state_inactive
+                        stop_image.source = list_icon_red.get(4).icon_inactive
+                        stop_state = stop_state_inactive
+                        set_set_ball_inactive_list()
+                        rec1.visible = true
+                        rec2.visible = true
+                        rec3.visible = true
+                        rec4.visible = true
+                        rec_state = rec_state_pressed
+                        set_color_ball_inactive_list()
+                        set_to_active_all_rec_list()
+                    }
+                    else if (rec_state == rec_state_pressed) {
+                        rec1.visible = false
+                        rec2.visible = false
+                        rec3.visible = false
+                        rec4.visible = false
+                        set_to_active_all_list()
+                    }
+                }
+                onEntered: {
+                    if (rec_state != rec_state_inactive) {
+                        set_ball_bright_list_01(list_state,rec_image,0)
+                    }
+                }
+                onExited: {
+                    if (rec_state != rec_state_inactive) {
+                        set_ball_normal_list_01(list_state,rec_image,0)
+                    }
+                }
+                onPressed: {
+                    if (rec_state != rec_state_inactive) {
+                        rec_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    rec_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Rec1 controller (list view)*/
+        Rectangle {
+            id: rec1
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/70)
+            y: (root.height)/(720/205)
+            visible: false
+            Image{
+                id: rec1_image
+                width: 50; height: 50
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (rec1_state == rec1_state_normal) {
+                        set_rec_ball_inactive_list()
+                        rec1_image.source = list_icon_red.get(6).icon_pressed
+                        rec2_image.source = list_icon_red.get(0).icon_inactive
+                        rec3_image.source = list_icon_red.get(1).icon_inactive
+                        rec4_image.source = list_icon_red.get(2).icon_inactive
+                        rec1_state = rec1_state_pressed
+                        rec2_state = rec2_state_inactive
+                        rec3_state = rec3_state_inactive
+                        rec4_state = rec4_state_inactive
+
+                        //recording camera 1
+                        /* Generate different name */
+                        currentTime = new Date()
+                        timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                        mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+                        mp4_recorder.usrcPort = camera1_port
+                        mp4_recorder.start()
+                    }
+                    else if (rec1_state == rec1_state_pressed) {
+                        set_to_active_all_rec_list()
+
+                        //stop recording camera1
+                        mp4_recorder.stop()
+                    }
+                }
+                onEntered: {
+                    if (rec1_state == rec1_state_normal) {
+                        set_ball_bright_list(list_state,rec1_image,6)
+                    }
+                    else if (rec1_state == rec1_state_pressed) {
+                        rec1_image.source = list_icon_red.get(6).icon_pressed_bright
+                    }
+                }
+                onExited: {
+                    if (rec1_state == rec1_state_normal) {
+                        set_ball_normal_list(list_state,rec1_image,6)
+                    }
+                    else if (rec1_state == rec1_state_pressed) {
+                        rec1_image.source = list_icon_red.get(6).icon_pressed
+                    }
+                }
+                onPressed: {
+                    if (rec1_state != rec1_state_inactive) {
+                        rec1_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    rec1_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Rec2 controller (list view)*/
+        Rectangle {
+            id: rec2
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/70)
+            y: (root.height)/(720/255)
+            visible: false
+            Image{
+                id: rec2_image
+                width: 50; height: 50
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (rec2_state == rec2_state_normal) {
+                        set_rec_ball_inactive_list()
+                        rec1_image.source = list_icon_red.get(6).icon_inactive
+                        rec2_image.source = list_icon_red.get(0).icon_pressed
+                        rec3_image.source = list_icon_red.get(1).icon_inactive
+                        rec4_image.source = list_icon_red.get(2).icon_inactive
+                        rec1_state = rec1_state_inactive
+                        rec2_state = rec2_state_pressed
+                        rec3_state = rec3_state_inactive
+                        rec4_state = rec2_state_inactive
+
+                        //recording camera 2
+                        /* Generate different name */
+                        currentTime = new Date()
+                        timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                        mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+                        mp4_recorder.usrcPort = camera2_port
+                        mp4_recorder.start()
+                    }
+                    else if (rec2_state == rec2_state_pressed) {
+                        set_to_active_all_rec_list()
+
+                        //stop recording camera2
+                        mp4_recorder.stop()
+                    }
+                }
+                onEntered: {
+                    if (rec2_state == rec2_state_normal) {
+                        set_ball_bright_list(list_state,rec2_image,0)
+                    }
+                    else if (rec2_state == rec2_state_pressed) {
+                        rec2_image.source = list_icon_red.get(0).icon_pressed_bright
+                    }
+                }
+                onExited: {
+                    if (rec2_state == rec2_state_normal) {
+                        set_ball_normal_list(list_state,rec2_image,0)
+                    }
+                    else if (rec2_state == rec2_state_pressed) {
+                        rec2_image.source = list_icon_red.get(0).icon_pressed
+                    }
+                }
+                onPressed: {
+                    if (rec2_state != rec2_state_inactive) {
+                        rec2_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    rec2_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Rec3 controller (list view)*/
+        Rectangle {
+            id: rec3
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/70)
+            y: (root.height)/(720/305)
+            visible: false
+            Image{
+                id: rec3_image
+                width: 50; height: 50
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (rec3_state == rec3_state_normal) {
+                        set_rec_ball_inactive_list()
+                        rec1_image.source = list_icon_red.get(6).icon_inactive
+                        rec2_image.source = list_icon_red.get(0).icon_inactive
+                        rec3_image.source = list_icon_red.get(1).icon_pressed
+                        rec4_image.source = list_icon_red.get(2).icon_inactive
+                        rec1_state = rec1_state_inactive
+                        rec2_state = rec2_state_inactive
+                        rec3_state = rec3_state_pressed
+                        rec4_state = rec4_state_inactive
+
+                        //recording camera3
+                        /* Generate different name */
+                        currentTime = new Date()
+                        timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                        mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+                        mp4_recorder.usrcPort = camera3_port
+                        mp4_recorder.start()
+                    }
+                    else if (rec3_state == rec3_state_pressed) {
+                        set_to_active_all_rec_list()
+
+                        //stop recording camera3
+                        mp4_recorder.stop()
+                    }
+                }
+                onEntered: {
+                    if (rec3_state == rec3_state_normal) {
+                        set_ball_bright_list(list_state,rec3_image,1)
+                    }
+                    else if (rec3_state == rec3_state_pressed) {
+                        rec3_image.source = list_icon_red.get(1).icon_pressed_bright
+                    }
+                }
+                onExited: {
+                    if (rec3_state == rec3_state_normal) {
+                        set_ball_normal_list(list_state,rec3_image,1)
+                    }
+                    else if (rec3_state == rec3_state_pressed) {
+                        rec3_image.source = list_icon_red.get(1).icon_pressed
+                    }
+                }
+                onPressed: {
+                    if (rec3_state != rec3_state_inactive) {
+                        rec3_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    rec3_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Rec4 controller (list view)*/
+        Rectangle {
+            id: rec4
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/70)
+            y: (root.height)/(720/355)
+            visible: false
+            Image{
+                id: rec4_image
+                width: 50; height: 50
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (rec4_state == rec4_state_normal) {
+                        set_rec_ball_inactive_list()
+                        rec1_image.source = list_icon_red.get(6).icon_inactive
+                        rec2_image.source = list_icon_red.get(0).icon_inactive
+                        rec3_image.source = list_icon_red.get(1).icon_inactive
+                        rec4_image.source = list_icon_red.get(2).icon_pressed
+                        rec1_state = rec1_state_inactive
+                        rec2_state = rec2_state_inactive
+                        rec3_state = rec3_state_inactive
+                        rec4_state = rec4_state_pressed
+
+                        //recording camera4
+                        /* Generate different name */
+                        currentTime = new Date()
+                        timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                        mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+                        mp4_recorder.usrcPort = camera4_port
+                        mp4_recorder.start()
+                    }
+                    else if (rec4_state == rec4_state_pressed) {
+                        set_to_active_all_rec_list()
+
+                        //stop recording camera4
+                        mp4_recorder.stop()
+                    }
+                }
+                onEntered: {
+                    if (rec4_state == rec4_state_normal) {
+                        set_ball_bright_list(list_state,rec4_image,2)
+                    }
+                    else if (rec4_state == rec4_state_pressed) {
+                        rec4_image.source = list_icon_red.get(2).icon_pressed_bright
+                    }
+                }
+                onExited: {
+                    if (rec4_state == rec4_state_normal) {
+                        set_ball_normal_list(list_state,rec4_image,2)
+                    }
+                    else if (rec4_state == rec4_state_pressed) {
+                        rec4_image.source = list_icon_red.get(2).icon_pressed
+                    }
+                }
+                onPressed: {
+                    if (rec4_state != rec4_state_inactive) {
+                        rec4_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    rec4_image.scale = 1.0
+                }
+            }
+        }
+
+        /*view controller*/
+        Rectangle {
+            id: view
+            color: "transparent"
+            width: 50; height: 50
+            x:(root.width)/(1280/30)
+            y:(root.height)/(720/120)
+            z:1
+            visible: false
+            property var mode: 1
+            Image{
+                id: view_image
+                source: list_icon_red_01.get(2).icon_normal
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (view.mode == 1) {
+                        view.mode = 2
+                        menu.visible = false
+                        temp_status.visible = false
+                        micro.visible = false
+                        micro.x = (root.width)/(1280/15)
+                        micro.y = (root.height)/(720/430)
+                        view.visible = false
+                        view.x = (root.width)/(1280/70)
+                        view.y = (root.height)/(720/305)
+                        mail.visible = false
+                        mail.x = (root.width)/(1280/70)
+                        mail.y = (root.height)/(720/355)
+                        arrow_state = arrow_state_normal
+                        arrow_image.source = image_arrow
+                        arrow.visible = true
+                        switch (pathv.model) {
+                        case list_icon_red: {
+                            list_state = list_state_red
+                            break
+                        }
+                        case list_icon_blue: {
+                            list_state = list_state_blue
+                            break
+                        }
+                        case list_icon_green: {
+                            list_state = list_state_green
+                            break
+                        }
+                        case list_icon_orange: {
+                            list_state = list_state_orange
+                            break
+                        }
+                        case list_icon_yellow: {
+                            list_state = list_state_yellow
+                            break
+                        }
+                        }
+                        set_to_active_all_list()
+                        set_state = set_state_normal
+                    }
+                    else if (view.mode == 2) {
+                        view.mode = 1
+                        menu.visible = true
+                        pathv.visible = true
+                        temp_status.visible = true
+                        micro.visible = true
+                        micro.x = (root.width)/(1280/10)
+                        micro.y = (root.height)/(720/480)
+                        view.x = (root.width)/(1280/30)
+                        view.y = (root.height)/(720/120)
+                        mail.x = (root.width)/(1280/80)
+                        mail.y = (root.height)/(720/120)
+                        set_to_hide_ball_list()
+                        arrow.visible = false
+                        set_state = set_state_normal
+                        if (display2_state == camera1_state) {
+                            micro.x = (root.width)/(1280/970)
+                            micro.y = (root.height)/(720/180)
+                        }
+                        if (display3_state == camera1_state) {
+                            micro.x = (root.width)/(1280/970)
+                            micro.y = (root.height)/(720/420)
+                        }
+                        if (display4_state == camera1_state) {
+                            micro.x = (root.width)/(1280/970)
+                            micro.y = (root.height)/(720/655)
+                        }
+                        set_ball_normal_list_01(list_state,view_image,2)
+                        switch (list_state) {
+                        case list_state_red: {
+                            pathv.model = list_icon_red
+                            status_text1.source = text_live_red
+                            break
+                        }
+                        case list_state_blue: {
+                            pathv.model = list_icon_blue
+                            status_text1.source = text_live_blue
+                            break
+                        }
+                        case list_state_green: {
+                            pathv.model = list_icon_green
+                            status_text1.source = text_live_green
+                            break
+                        }
+                        case list_state_orange: {
+                            pathv.model = list_icon_orange
+                            status_text1.source = text_live_orange
+                            break
+                        }
+                        case list_state_yellow: {
+                            pathv.model = list_icon_yellow
+                            status_text1.source = text_live_yellow
+                            break
+                        }
+                        }
+                    }
+                }
+                onEntered: {
+                    if (view.mode == 1) {
+                        set_ball_bright_list_02(pathv.model,view_image,2)
+                    }
+                    else if (view.mode == 2) {
+                        set_ball_bright_list_01(list_state,view_image,3)
+                    }
+                }
+                onExited: {
+                    if (view.mode == 1) {
+                        set_ball_normal_list_02(pathv.model,view_image,2)
+                    }
+                    else if (view.mode == 2) {
+                        set_ball_normal_list_01(list_state,view_image,3)
+                    }
+                }
+                onPressed: {
+                    view_image.scale = 0.9
+                }
+                onReleased: {
+                    view_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Mail controller*/
+        Rectangle {
+            id: mail
+            color: "transparent"
+            width: 50; height: 50
+            x:(root.width)/(1280/80)
+            y:(root.height)/(720/120)
+            z:1
+            visible: false
+            Image{
+                id: mail_image
+                source: list_icon_red_01.get(4).icon_normal
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    menu.visible = false
+                    temp_status.visible = false
+                    micro.visible = false
+                    arrow.visible = false
+                    set_to_hide_ball_list()
+                    textfield.text = ""
+                    mail_input.visible = true
+                }
+                onEntered: {
+                    if (view.mode == 1) {
+                        set_ball_bright_list_02(pathv.model,mail_image,4)
+                    }
+                    else if (view.mode == 2) {
+                        set_ball_bright_list_01(list_state,mail_image,4)
+                    }
+                }
+                onExited: {
+                    if (view.mode == 1) {
+                        set_ball_normal_list_02(pathv.model,mail_image,4)
+                    }
+                    else if (view.mode == 2) {
+                        set_ball_normal_list_01(list_state,mail_image,4)
+                    }
+                }
+                onPressed: {
+                    mail_image.scale = 0.9
+                }
+                onReleased: {
+                    mail_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Set controller (list view)*/
+        Rectangle {
+            id: set
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/15)
+            y: (root.height)/(720/330)
+            visible: false
+            Image{
+                id: set_image
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (set_state == set_state_normal) {
+                        set_state = set_state_pressed
+                        play_image.source = list_icon_red.get(5).icon_inactive
+                        play_state = play_state_inactive
+                        stop_image.source = list_icon_red.get(4).icon_inactive
+                        stop_state = stop_state_inactive
+                        set_rec_ball_inactive_list()
+                        set_color_ball_inactive_list()
+                        mail.visible = true
+                        view.visible = true
+                        set_ball_normal_list_01(list_state,view_image,3)
+                        set_ball_normal_list_01(list_state,mail_image,4)
+                    }
+                    else if (set_state == set_state_pressed)  {
+                        mail.visible = false
+                        view.visible = false
+                        set_to_active_all_list()
+                    }
+                }
+                onEntered: {
+                    if (set_state != set_state_inactive) {
+                        set_ball_bright_list_01(list_state,set_image,1)
+                    }
+                }
+                onExited: {
+                    if (set_state != set_state_inactive) {
+                        set_ball_normal_list_01(list_state,set_image,1)
+                    }
+                }
+                onPressed: {
+                    if (set_state != set_state_inactive) {
+                        set_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    set_image.scale = 1.0
+                }
+            }
+        }
+
+        /*Color controller (list view)*/
+        Rectangle {
+            id: color
+            color: "transparent"
+            width: 50; height: 50
+            x: (root.width)/(1280/15)
+            y: (root.height)/(720/380)
+            visible: false
+            Image{
+                id: color_image
+                width: 50; height: 50
+                source: ""
+            }
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (color_state == color_state_normal) {
+                        switch (list_state) {
+                        case list_state_red: {
+                            play_image.source = list_icon_blue.get(5).icon_normal
+                            stop_image.source = list_icon_blue.get(4).icon_normal
+                            rec_image.source = list_icon_blue_01.get(0).icon_normal
                             set_image.source = list_icon_blue_01.get(1).icon_normal
                             list_state = list_state_blue
                             break
@@ -2006,198 +2006,198 @@ Rectangle {
                             list_state = list_state_red
                             break
                         }
+                        }
                     }
                 }
-            }
-            onEntered: {
-                if (color_state == color_state_normal) {
-                     color_image.source = list_icon_red.get(3).icon_bright
-                 }
-             }
-
-             onExited: {
-                if (color_state == color_state_normal) {
-                     color_image.source = list_icon_red.get(3).icon_normal
-                 }
-             }
-
-             onPressed: {
-                 if (color_state == color_state_normal) {
-                    color_image.scale = 0.9
-                 }
-             }
-             onReleased: {
-                 color_image.scale = 1.0
-             }
-         }
-     }
-
-    /*Status controller*/
-    Rectangle {
-        id: temp_status
-        color: "transparent"
-        width: 90; height: 90
-        x: (root.width)/(1280/25)
-        y: (root.height)/(720/10)
-        z:9
-        visible: true
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            onClicked: {
-                if (set_state == set_state_normal) {
-                    pathv.visible = false
-                    view.visible = true
-                    mail.visible = true
-                    set_state = set_state_pressed
-                }
-                else if (set_state == set_state_pressed) {
-                    pathv.visible = true
-                    view.visible = false
-                    mail.visible = false
-                    set_state = set_state_normal
+                onEntered: {
+                    if (color_state == color_state_normal) {
+                        color_image.source = list_icon_red.get(3).icon_bright
+                    }
+                }
+
+                onExited: {
+                    if (color_state == color_state_normal) {
+                        color_image.source = list_icon_red.get(3).icon_normal
+                    }
+                }
+
+                onPressed: {
+                    if (color_state == color_state_normal) {
+                        color_image.scale = 0.9
+                    }
+                }
+                onReleased: {
+                    color_image.scale = 1.0
                 }
-            }
-            onEntered: {
-                status_image.source = status_ball_bright
-            }
-            onExited: {
-                status_image.source = status_ball
-            }
-            onPressed: {
-                status_image.scale = 0.9
-                status_text1.scale = 0.9
-            }
-            onReleased: {
-                status_image.scale = 1.0
-                status_text1.scale = 1.0
             }
         }
-    }
 
-    /*Main Menu*/
-    Rectangle {
-        id: menu
-        color: "transparent"
-        width: 160; height: 160
-        x: (root.width)/(1280/10)
-        y: (root.height)/(720/10)
-        visible: true
-        //Status ball
-        Image{
-        id: status_image
-            x: 15
-            y: 10
-            source: status_ball
-        }
-
-        //Status text
+        /*Status controller*/
         Rectangle {
-            id: status_text
-            x: 23
-            y: 25
-            Image{
-                x: 0
-                y: 20
-                anchors.centerIn: status_text.Center
-                id: status_text1
-                source: text_live_red
+            id: temp_status
+            color: "transparent"
+            width: 90; height: 90
+            x: (root.width)/(1280/25)
+            y: (root.height)/(720/10)
+            z:9
+            visible: true
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                onClicked: {
+                    if (set_state == set_state_normal) {
+                        pathv.visible = false
+                        view.visible = true
+                        mail.visible = true
+                        set_state = set_state_pressed
+                    }
+                    else if (set_state == set_state_pressed) {
+                        pathv.visible = true
+                        view.visible = false
+                        mail.visible = false
+                        set_state = set_state_normal
+                    }
+                }
+                onEntered: {
+                    status_image.source = status_ball_bright
+                }
+                onExited: {
+                    status_image.source = status_ball
+                }
+                onPressed: {
+                    status_image.scale = 0.9
+                    status_text1.scale = 0.9
+                }
+                onReleased: {
+                    status_image.scale = 1.0
+                    status_text1.scale = 1.0
+                }
             }
+        }
 
+        /*Main Menu*/
+        Rectangle {
+            id: menu
+            color: "transparent"
+            width: 160; height: 160
+            x: (root.width)/(1280/10)
+            y: (root.height)/(720/10)
+            visible: true
+            //Status ball
             Image{
-                x: 0
-                y: 40
-                anchors.centerIn: status_text.Center
-                id: status_text2
-                source: ""
+                id: status_image
+                x: 15
+                y: 10
+                source: status_ball
+            }
+
+            //Status text
+            Rectangle {
+                id: status_text
+                x: 23
+                y: 25
+                Image{
+                    x: 0
+                    y: 20
+                    anchors.centerIn: status_text.Center
+                    id: status_text1
+                    source: text_live_red
+                }
+
+                Image{
+                    x: 0
+                    y: 40
+                    anchors.centerIn: status_text.Center
+                    id: status_text2
+                    source: ""
+                }
             }
-        }
 
-        PathView {
-            id: pathv
-            anchors.fill: parent
-            model: list_icon_red
-            delegate: Component {
-                id: delegate
-                Item {
-                    width: 50; height: 50
-                    scale: PathView.iconScale
-                    opacity: PathView.iconOpacity
-                    Column {
-                        Rectangle{
-                            id: icon_frame
-                            width: 64; height: 64
-                            color: "#00000000"
-                            Image {
-                                id: icon_image
-                                anchors.verticalCenter: icon_frame.verticalCenter
-                                anchors.horizontalCenter: icon_frame.horizontalCenter
-                                //anchors.horizontalCenter: nameText.horizontalCenter
-                                width: 64
-                                height: 64
-                                source: icon
-                            }
-                            //Text { id: nameText; text: name; font.pointSize: 16 }
+            PathView {
+                id: pathv
+                anchors.fill: parent
+                model: list_icon_red
+                delegate: Component {
+                    id: delegate
+                    Item {
+                        width: 50; height: 50
+                        scale: PathView.iconScale
+                        opacity: PathView.iconOpacity
+                        Column {
+                            Rectangle{
+                                id: icon_frame
+                                width: 64; height: 64
+                                color: "#00000000"
+                                Image {
+                                    id: icon_image
+                                    anchors.verticalCenter: icon_frame.verticalCenter
+                                    anchors.horizontalCenter: icon_frame.horizontalCenter
+                                    //anchors.horizontalCenter: nameText.horizontalCenter
+                                    width: 64
+                                    height: 64
+                                    source: icon
+                                }
+                                //Text { id: nameText; text: name; font.pointSize: 16 }
 
-                        }
-                    }
-                    MouseArea {
-                        anchors.fill: parent
-                        hoverEnabled: true
-
-                        onEntered: {
-                            if ( pathv.model.get(index).state == icon_normal_state)  {
-                                pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
-                                pathv.model.setProperty(index, "state", icon_normal_bright_state)
-                            } else if (pathv.model.get(index).state == icon_pressed_state) {
-                                pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
-                                pathv.model.setProperty(index, "state", icon_pressed_bright_state)
                             }
                         }
+                        MouseArea {
+                            anchors.fill: parent
+                            hoverEnabled: true
 
-                        onPressed: {
-                            if ( pathv.model.get(index).state != icon_inactive_state) {
-                                icon_image.width = 50
-                                icon_image.height = 50
+                            onEntered: {
+                                if ( pathv.model.get(index).state == icon_normal_state)  {
+                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
+                                    pathv.model.setProperty(index, "state", icon_normal_bright_state)
+                                } else if (pathv.model.get(index).state == icon_pressed_state) {
+                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
+                                    pathv.model.setProperty(index, "state", icon_pressed_bright_state)
+                                }
                             }
-                        }
-                        onReleased: {
-                            icon_image.width = 64
-                            icon_image.height = 64
-                        }
 
-                        onExited: {
-                            icon_image.width = 64
-                            icon_image.height = 64
-                            if ( pathv.model.get(index).state == icon_normal_bright_state)  {
-                                pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_normal)
-                                pathv.model.setProperty(index, "state", icon_normal_state)
-                            } else if (pathv.model.get(index).state == icon_pressed_bright_state) {
-                                pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed)
-                                pathv.model.setProperty(index, "state", icon_pressed_state)
+                            onPressed: {
+                                if ( pathv.model.get(index).state != icon_inactive_state) {
+                                    icon_image.width = 50
+                                    icon_image.height = 50
+                                }
                             }
-                        }
-                        onClicked: {
-                            //move selected item to the bigest place
-                            //determine second column
-                            if ((index - pathv.currentIndex != 2) && (pathv.currentIndex - index != 4)) {
-                                //shift left/right if it is not on third column
-                                if (index >= 3 ) {
-                                    pathv.currentIndex = index - 3
-                                } else {
-                                    pathv.currentIndex = index + 3
+                            onReleased: {
+                                icon_image.width = 64
+                                icon_image.height = 64
+                            }
+
+                            onExited: {
+                                icon_image.width = 64
+                                icon_image.height = 64
+                                if ( pathv.model.get(index).state == icon_normal_bright_state)  {
+                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_normal)
+                                    pathv.model.setProperty(index, "state", icon_normal_state)
+                                } else if (pathv.model.get(index).state == icon_pressed_bright_state) {
+                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed)
+                                    pathv.model.setProperty(index, "state", icon_pressed_state)
                                 }
                             }
+                            onClicked: {
+                                //move selected item to the bigest place
+                                //determine second column
+                                if ((index - pathv.currentIndex != 2) && (pathv.currentIndex - index != 4)) {
+                                    //shift left/right if it is not on third column
+                                    if (index >= 3 ) {
+                                        pathv.currentIndex = index - 3
+                                    } else {
+                                        pathv.currentIndex = index + 3
+                                    }
+                                }
 
-                            //change icons normal <=> pressed
-                            //execute function id
-			    if (pathv.model == list_icon_red) {
-			        if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
-                                    pathv.model.setProperty(index, "state", icon_pressed_bright_state)
-                                    //execute function id
-                                    switch (index){
+                                //change icons normal <=> pressed
+                                //execute function id
+                                if (pathv.model == list_icon_red) {
+                                    if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
+                                        pathv.model.setProperty(index, "state", icon_pressed_bright_state)
+                                        //execute function id
+                                        switch (index){
                                         case stop_id: {
                                             //change play/pause icon to play in case it is pause
                                             if ( pathv.model.get(play_id).state == icon_pressed_state ) {
@@ -2220,7 +2220,7 @@ Rectangle {
                                             //playback play
                                             if (onplayback == true) {
                                                 mediaplayer.play()
-											} else {
+                                            } else {
                                                 //set icon state
                                                 set_to_inactive_all(play_id)
                                                 set_to_inactive(play_id)
@@ -2230,11 +2230,11 @@ Rectangle {
                                             break
                                         }
                                         case rec1_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-										
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec1_id)
                                             status_text1.source = text_recording_red
@@ -2246,13 +2246,13 @@ Rectangle {
                                             mp4_recorder.start()
 
                                             break
-                                        } 
+                                        }
                                         case rec2_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)								
-											mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																														
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec2_id)
                                             status_text1.source = text_recording_red
@@ -2265,11 +2265,11 @@ Rectangle {
                                             break
                                         }
                                         case rec3_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																				
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec3_id)
                                             status_text1.source = text_recording_red
@@ -2282,11 +2282,11 @@ Rectangle {
                                             break
                                         }
                                         case rec4_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																					
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec4_id)
                                             status_text1.source = text_recording_red
@@ -2298,7 +2298,7 @@ Rectangle {
                                             mp4_recorder.start()
                                             break
                                         }
-                                            case color_id: {
+                                        case color_id: {
                                             status_text1.source = text_live_blue
                                             status_text2.source = ""
                                             view_image.source = list_icon_blue_01.get(2).icon_normal
@@ -2310,13 +2310,13 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
-                                    }
-                                } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
-                                    pathv.model.setProperty(index, "state", icon_normal_bright_state)
-                                    // execute function id
-                                    switch (index){
+                                        }
+                                    } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
+                                        pathv.model.setProperty(index, "state", icon_normal_bright_state)
+                                        // execute function id
+                                        switch (index){
                                         case stop_id: {
                                             break
                                         }
@@ -2371,7 +2371,7 @@ Rectangle {
                                             mp4_recorder.stop()
                                             break
                                         }
-                                            case color_id: {
+                                        case color_id: {
                                             status_text1.source = text_live_blue
                                             status_text2.source = ""
                                             view_image.source = list_icon_blue_01.get(2).icon_normal
@@ -2383,16 +2383,16 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
+                                        }
                                     }
                                 }
-			    }
-			    else if (pathv.model == list_icon_blue) {
-			        if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
-                                    pathv.model.setProperty(index, "state", icon_pressed_bright_state)
-                                    //execute function id
-                                    switch (index){
+                                else if (pathv.model == list_icon_blue) {
+                                    if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
+                                        pathv.model.setProperty(index, "state", icon_pressed_bright_state)
+                                        //execute function id
+                                        switch (index){
                                         case stop_id: {
                                             //change play/pause icon to play in case it is pause
                                             if ( pathv.model.get(play_id).state == icon_pressed_state ) {
@@ -2415,7 +2415,7 @@ Rectangle {
                                             //playback play
                                             if (onplayback == true) {
                                                 mediaplayer.play()
-											} else {
+                                            } else {
                                                 //set icon state
                                                 set_to_inactive_all(play_id)
                                                 set_to_inactive(play_id)
@@ -2425,11 +2425,11 @@ Rectangle {
                                             break
                                         }
                                         case rec1_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-										
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec1_id)
                                             status_text1.source = text_recording_blue
@@ -2441,13 +2441,13 @@ Rectangle {
                                             mp4_recorder.start()
 
                                             break
-                                        } 
+                                        }
                                         case rec2_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)								
-											mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																														
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec2_id)
                                             status_text1.source = text_recording_blue
@@ -2460,11 +2460,11 @@ Rectangle {
                                             break
                                         }
                                         case rec3_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																				
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec3_id)
                                             status_text1.source = text_recording_blue
@@ -2477,11 +2477,11 @@ Rectangle {
                                             break
                                         }
                                         case rec4_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																					
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec4_id)
                                             status_text1.source = text_recording_blue
@@ -2505,13 +2505,13 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
-                                    }
-                                } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
-                                    pathv.model.setProperty(index, "state", icon_normal_bright_state)
-                                    // execute function id
-                                    switch (index){
+                                        }
+                                    } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
+                                        pathv.model.setProperty(index, "state", icon_normal_bright_state)
+                                        // execute function id
+                                        switch (index){
                                         case stop_id: {
                                             break
                                         }
@@ -2573,21 +2573,21 @@ Rectangle {
                                             mail_image.source = list_icon_green_01.get(4).icon_normal
                                             pathv.model = list_icon_green
                                             break
-                                        }				    
+                                        }
                                         default : {
                                             console.log('No Function')
                                         }
 
+                                        }
                                     }
                                 }
-			    }
-			    else if (pathv.model == list_icon_green) {
-			        if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
-                                    pathv.model.setProperty(index, "state", icon_pressed_bright_state)
-                                    //execute function id
-                                    switch (index){
+                                else if (pathv.model == list_icon_green) {
+                                    if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
+                                        pathv.model.setProperty(index, "state", icon_pressed_bright_state)
+                                        //execute function id
+                                        switch (index){
                                         case stop_id: {
                                             //change play/pause icon to play in case it is pause
                                             if ( pathv.model.get(play_id).state == icon_pressed_state ) {
@@ -2610,7 +2610,7 @@ Rectangle {
                                             //playback play
                                             if (onplayback == true) {
                                                 mediaplayer.play()
-											} else {
+                                            } else {
                                                 //set icon state
                                                 set_to_inactive_all(play_id)
                                                 set_to_inactive(play_id)
@@ -2620,11 +2620,11 @@ Rectangle {
                                             break
                                         }
                                         case rec1_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-										
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec1_id)
                                             status_text1.source = text_recording_green
@@ -2636,13 +2636,13 @@ Rectangle {
                                             mp4_recorder.start()
 
                                             break
-                                        } 
+                                        }
                                         case rec2_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)								
-											mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																														
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec2_id)
                                             status_text1.source = text_recording_green
@@ -2655,11 +2655,11 @@ Rectangle {
                                             break
                                         }
                                         case rec3_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																				
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec3_id)
                                             status_text1.source = text_recording_green
@@ -2672,11 +2672,11 @@ Rectangle {
                                             break
                                         }
                                         case rec4_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																					
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec4_id)
                                             status_text1.source = text_recording_green
@@ -2700,13 +2700,13 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
-                                    }
-                                } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
-                                    pathv.model.setProperty(index, "state", icon_normal_bright_state)
-                                    // execute function id
-                                    switch (index){
+                                        }
+                                    } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
+                                        pathv.model.setProperty(index, "state", icon_normal_bright_state)
+                                        // execute function id
+                                        switch (index){
                                         case stop_id: {
                                             break
                                         }
@@ -2768,21 +2768,21 @@ Rectangle {
                                             mail_image.source = list_icon_orange_01.get(4).icon_normal
                                             pathv.model = list_icon_orange
                                             break
-                                        }				    
+                                        }
                                         default : {
                                             console.log('No Function')
                                         }
 
+                                        }
                                     }
                                 }
-			    }
-			    else if (pathv.model == list_icon_orange) {
-			        if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
-                                    pathv.model.setProperty(index, "state", icon_pressed_bright_state)
-                                    //execute function id
-                                    switch (index){
+                                else if (pathv.model == list_icon_orange) {
+                                    if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
+                                        pathv.model.setProperty(index, "state", icon_pressed_bright_state)
+                                        //execute function id
+                                        switch (index){
                                         case stop_id: {
                                             //change play/pause icon to play in case it is pause
                                             if ( pathv.model.get(play_id).state == icon_pressed_state ) {
@@ -2805,7 +2805,7 @@ Rectangle {
                                             //playback play
                                             if (onplayback == true) {
                                                 mediaplayer.play()
-											} else {
+                                            } else {
                                                 //set icon state
                                                 set_to_inactive_all(play_id)
                                                 set_to_inactive(play_id)
@@ -2815,11 +2815,11 @@ Rectangle {
                                             break
                                         }
                                         case rec1_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-										
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec1_id)
                                             status_text1.source = text_recording_orange
@@ -2831,13 +2831,13 @@ Rectangle {
                                             mp4_recorder.start()
 
                                             break
-                                        } 
+                                        }
                                         case rec2_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)								
-											mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																														
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec2_id)
                                             status_text1.source = text_recording_orange
@@ -2850,11 +2850,11 @@ Rectangle {
                                             break
                                         }
                                         case rec3_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																				
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec3_id)
                                             status_text1.source = text_recording_orange
@@ -2867,11 +2867,11 @@ Rectangle {
                                             break
                                         }
                                         case rec4_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																					
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec4_id)
                                             status_text1.source = text_recording_orange
@@ -2895,13 +2895,13 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
-                                    }
-                                } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
-                                    pathv.model.setProperty(index, "state", icon_normal_bright_state)
-                                    // execute function id
-                                    switch (index){
+                                        }
+                                    } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
+                                        pathv.model.setProperty(index, "state", icon_normal_bright_state)
+                                        // execute function id
+                                        switch (index){
                                         case stop_id: {
                                             break
                                         }
@@ -2968,16 +2968,16 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
+                                        }
                                     }
                                 }
-			    }
-			    else if (pathv.model == list_icon_yellow) {
-			        if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
-                                    pathv.model.setProperty(index, "state", icon_pressed_bright_state)
-                                    //execute function id
-                                    switch (index){
+                                else if (pathv.model == list_icon_yellow) {
+                                    if (pathv.model.get(index).state == icon_normal_bright_state || pathv.model.get(index).state == icon_normal_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_pressed_bright)
+                                        pathv.model.setProperty(index, "state", icon_pressed_bright_state)
+                                        //execute function id
+                                        switch (index){
                                         case stop_id: {
                                             //change play/pause icon to play in case it is pause
                                             if ( pathv.model.get(play_id).state == icon_pressed_state ) {
@@ -3000,7 +3000,7 @@ Rectangle {
                                             //playback play
                                             if (onplayback == true) {
                                                 mediaplayer.play()
-											} else {
+                                            } else {
                                                 //set icon state
                                                 set_to_inactive_all(play_id)
                                                 set_to_inactive(play_id)
@@ -3010,11 +3010,11 @@ Rectangle {
                                             break
                                         }
                                         case rec1_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-										
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera1_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec1_id)
                                             status_text1.source = text_recording_yellow
@@ -3026,13 +3026,13 @@ Rectangle {
                                             mp4_recorder.start()
 
                                             break
-                                        } 
+                                        }
                                         case rec2_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)								
-											mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																														
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera2_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec2_id)
                                             status_text1.source = text_recording_yellow
@@ -3045,11 +3045,11 @@ Rectangle {
                                             break
                                         }
                                         case rec3_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																				
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera3_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec3_id)
                                             status_text1.source = text_recording_yellow
@@ -3062,11 +3062,11 @@ Rectangle {
                                             break
                                         }
                                         case rec4_id: {
-											/* Generate different name */
-											currentTime = new Date()
-											timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
-											mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
-																					
+                                            /* Generate different name */
+                                            currentTime = new Date()
+                                            timeString = currentTime.toLocaleTimeString(locale, Locale.ShortFormat)
+                                            mp4_recorder.fSinkLocation = "/camera4_"+Date.fromLocaleTimeString(locale, timeString, Locale.ShortFormat)+".mp4";
+
                                             //change icon state
                                             set_to_inactive_all(rec4_id)
                                             status_text1.source = text_recording_yellow
@@ -3090,13 +3090,13 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
-                                    }
-                                } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
-                                    //change icon
-                                    pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
-                                    pathv.model.setProperty(index, "state", icon_normal_bright_state)
-                                    // execute function id
-                                    switch (index){
+                                        }
+                                    } else if (pathv.model.get(index).state == icon_pressed_bright_state || pathv.model.get(index).state == icon_pressed_state) {
+                                        //change icon
+                                        pathv.model.setProperty(index, "icon", pathv.model.get(index).icon_bright)
+                                        pathv.model.setProperty(index, "state", icon_normal_bright_state)
+                                        // execute function id
+                                        switch (index){
                                         case stop_id: {
                                             break
                                         }
@@ -3163,434 +3163,434 @@ Rectangle {
                                             console.log('No Function')
                                         }
 
+                                        }
                                     }
                                 }
-			    }
 
+                            }
                         }
                     }
                 }
-            }
-            path: Path {
-                startX: 110; startY: 15
-                //startX: 130; startY: 50
-                PathAttribute { name: "iconz"; value: 0 }
-                PathAttribute { name: "iconScale"; value: 0.3 }
-                PathAttribute { name: "iconOpacity"; value: 0.9 }
-                PathArc { x: 100; y:105; radiusX: 80; radiusY: 60; direction: PathArc.Clockwise; useLargeArc : false}
-                PathAttribute { name: "iconz"; value: 50 }
-                PathAttribute { name: "iconScale"; value: 1.0 }
-                PathAttribute { name: "iconOpacity"; value: 1.0 }
-                PathArc { x: 20; y: 25; radiusX: 50; radiusY: 60; direction: PathArc.Clockwise; useLargeArc : false}
-                PathAttribute { name: "iconScale"; value: 0.3}
-                PathAttribute { name: "iconOpacity"; value: 0.9 }
+                path: Path {
+                    startX: 110; startY: 15
+                    //startX: 130; startY: 50
+                    PathAttribute { name: "iconz"; value: 0 }
+                    PathAttribute { name: "iconScale"; value: 0.3 }
+                    PathAttribute { name: "iconOpacity"; value: 0.9 }
+                    PathArc { x: 100; y:105; radiusX: 80; radiusY: 60; direction: PathArc.Clockwise; useLargeArc : false}
+                    PathAttribute { name: "iconz"; value: 50 }
+                    PathAttribute { name: "iconScale"; value: 1.0 }
+                    PathAttribute { name: "iconOpacity"; value: 1.0 }
+                    PathArc { x: 20; y: 25; radiusX: 50; radiusY: 60; direction: PathArc.Clockwise; useLargeArc : false}
+                    PathAttribute { name: "iconScale"; value: 0.3}
+                    PathAttribute { name: "iconOpacity"; value: 0.9 }
 
-            }
+                }
 
-            //focus: true
+                //focus: true
+            }
         }
-    }
 
-    /*Control widow for display 2*/
-    Rectangle {
+        /*Control widow for display 2*/
+        Rectangle {
             id: display2_window
-        color: "transparent"
+            color: "transparent"
             x: (root.width/(1280/970));
             y: (root.height/(720/10));
             width: (root.width/(1280/300));
             height: (root.height/(720/220))
-        property bool reset: false
-
-        MouseArea {
-            anchors.fill: parent
-            onClicked: {
-                // change title plate
-                title_image1.source = title_Cam2
-                title_image2.source = title_Cam1
-                title_Cam2 = title_image2.source
-                title_Cam1 = title_image1.source
-                // Move micro icon to the window display that display camera1
-                temp_state = display1_state
-                display1_state = display2_state
-                display2_state = temp_state
-
-                if (arrow.visible == false) {
-                    if (display2_state == camera1_state) {
+            property bool reset: false
+
+            MouseArea {
+                anchors.fill: parent
+                onClicked: {
+                    // change title plate
+                    title_image1.source = title_Cam2
+                    title_image2.source = title_Cam1
+                    title_Cam2 = title_image2.source
+                    title_Cam1 = title_image1.source
+                    // Move micro icon to the window display that display camera1
+                    temp_state = display1_state
+                    display1_state = display2_state
+                    display2_state = temp_state
+
+                    if (arrow.visible == false) {
+                        if (display2_state == camera1_state) {
                             micro.x = (root.width/(1280/970))
                             micro.y = (root.height/(720/180))
-                    }
-                    if (display1_state == camera1_state) {
+                        }
+                        if (display1_state == camera1_state) {
                             micro.x = (root.width)/(1280/10)
                             micro.y = (root.height/(720/480))
+                        }
                     }
-                }
 
-                //change camera input
-                camera1.udpPort = l_port2
-                camera2.udpPort = l_port1
+                    //change camera input
+                    camera1.udpPort = l_port2
+                    camera2.udpPort = l_port1
 
-                l_port1 = camera1.udpPort
-                l_port2 = camera2.udpPort
-            }
-            
-	        onDoubleClicked: {
-                mouse.accepted = false
-            }
-            onPositionChanged: {
-                mouse.accepted = false
-            }
-            onPressAndHold: {
-                mouse.accepted = false
-            }
+                    l_port1 = camera1.udpPort
+                    l_port2 = camera2.udpPort
+                }
 
-            onPressed: {
-                background_image.source = background_image_pressed2
-            }
+                onDoubleClicked: {
+                    mouse.accepted = false
+                }
+                onPositionChanged: {
+                    mouse.accepted = false
+                }
+                onPressAndHold: {
+                    mouse.accepted = false
+                }
 
-            onReleased: {
-                background_image.source = background_image_normal
+                onPressed: {
+                    background_image.source = background_image_pressed2
+                }
+
+                onReleased: {
+                    background_image.source = background_image_normal
+                }
             }
         }
-    }
 
-    /*Control widow for display 3*/
-    Rectangle {
-        id: display3_window
-        color: "transparent"
-        x: (root.width/(1280/970));
-        y: (root.height/(720/250));
-        width: (root.width/(1280/300));
-        height: (root.height/(720/220))
-        property bool reset: false
-
-        MouseArea {
-            anchors.fill: parent
-            onClicked: {
-                //change title plate
-                title_image1.source = title_Cam3
-                title_image3.source = title_Cam1
-                title_Cam3 = title_image3.source
-                title_Cam1 = title_image1.source
-
-                // Move micro icon to the window display that display camera1
-                temp_state = display1_state
-                display1_state = display3_state
-                display3_state = temp_state
-
-                if (arrow.visible == false) {
-                    if (display3_state == camera1_state) {
+        /*Control widow for display 3*/
+        Rectangle {
+            id: display3_window
+            color: "transparent"
+            x: (root.width/(1280/970));
+            y: (root.height/(720/250));
+            width: (root.width/(1280/300));
+            height: (root.height/(720/220))
+            property bool reset: false
+
+            MouseArea {
+                anchors.fill: parent
+                onClicked: {
+                    //change title plate
+                    title_image1.source = title_Cam3
+                    title_image3.source = title_Cam1
+                    title_Cam3 = title_image3.source
+                    title_Cam1 = title_image1.source
+
+                    // Move micro icon to the window display that display camera1
+                    temp_state = display1_state
+                    display1_state = display3_state
+                    display3_state = temp_state
+
+                    if (arrow.visible == false) {
+                        if (display3_state == camera1_state) {
                             micro.x = (root.width/(1280/970))
                             micro.y = (root.height/(720/420))
-                    }
-                    if (display1_state == camera1_state) {
+                        }
+                        if (display1_state == camera1_state) {
                             micro.x = (root.width)/(1280/10)
                             micro.y = (root.height/(720/480))
+                        }
                     }
-                }
 
-                //change camera input
-                camera1.udpPort = l_port3
-                camera3.udpPort = l_port1
+                    //change camera input
+                    camera1.udpPort = l_port3
+                    camera3.udpPort = l_port1
 
-                l_port1 = camera1.udpPort
-                l_port3 = camera3.udpPort
-            }
+                    l_port1 = camera1.udpPort
+                    l_port3 = camera3.udpPort
+                }
 
-            onDoubleClicked: {
-                mouse.accepted = false
-            }
-            onPositionChanged: {
-                mouse.accepted = false
-            }
-            onPressAndHold: {
-                mouse.accepted = false
-            }
+                onDoubleClicked: {
+                    mouse.accepted = false
+                }
+                onPositionChanged: {
+                    mouse.accepted = false
+                }
+                onPressAndHold: {
+                    mouse.accepted = false
+                }
 
-            onPressed: {
-                background_image.source = background_image_pressed3
-            }
+                onPressed: {
+                    background_image.source = background_image_pressed3
+                }
 
-            onReleased: {
-                background_image.source = background_image_normal
+                onReleased: {
+                    background_image.source = background_image_normal
+                }
             }
         }
-    }
 
-    /*Control widow for display 4*/
-    Rectangle {
+        /*Control widow for display 4*/
+        Rectangle {
             id: display4_window
-        color: "transparent"
+            color: "transparent"
             x: (root.width/(1280/970));
             y: (root.height/(720/486));
             width: (root.width/(1280/300));
             height: (root.height/(720/220))
-        property bool reset: false
-
-        MouseArea {
-            anchors.fill: parent
-            onClicked: {
-                //change title plate
-                title_image1.source = title_Cam4
-                title_image4.source = title_Cam1
-                title_Cam4 = title_image4.source
-                title_Cam1 = title_image1.source
-                // Move micro icon to the window display that display camera1
-                temp_state = display1_state
-                display1_state = display4_state
-                display4_state = temp_state
-
-                if (arrow.visible == false) {
-                    if (display4_state == camera1_state) {
+            property bool reset: false
+
+            MouseArea {
+                anchors.fill: parent
+                onClicked: {
+                    //change title plate
+                    title_image1.source = title_Cam4
+                    title_image4.source = title_Cam1
+                    title_Cam4 = title_image4.source
+                    title_Cam1 = title_image1.source
+                    // Move micro icon to the window display that display camera1
+                    temp_state = display1_state
+                    display1_state = display4_state
+                    display4_state = temp_state
+
+                    if (arrow.visible == false) {
+                        if (display4_state == camera1_state) {
                             micro.x = (root.width/(1280/970))
                             micro.y = (root.height/(720/655))
-                    }
-                    if (display1_state == camera1_state) {
+                        }
+                        if (display1_state == camera1_state) {
                             micro.x = (root.width)/(1280/10)
                             micro.y = (root.height/(720/480))
+                        }
                     }
-                }
 
-                //switch camera input
-                camera1.udpPort = l_port4
-                camera4.udpPort = l_port1
+                    //switch camera input
+                    camera1.udpPort = l_port4
+                    camera4.udpPort = l_port1
 
-                l_port1 = camera1.udpPort
-                l_port4 = camera4.udpPort
-            }
+                    l_port1 = camera1.udpPort
+                    l_port4 = camera4.udpPort
+                }
 
-            onDoubleClicked: {
-                mouse.accepted = false
-            }
-            onPositionChanged: {
-                mouse.accepted = false
-            }
-            onPressAndHold: {
-                mouse.accepted = false
-            }
+                onDoubleClicked: {
+                    mouse.accepted = false
+                }
+                onPositionChanged: {
+                    mouse.accepted = false
+                }
+                onPressAndHold: {
+                    mouse.accepted = false
+                }
 
-            onPressed: {
-                background_image.source = background_image_pressed4
-            }
+                onPressed: {
+                    background_image.source = background_image_pressed4
+                }
 
-            onReleased: {
-                background_image.source = background_image_normal
+                onReleased: {
+                    background_image.source = background_image_normal
+                }
             }
         }
-    }
 
 
-    /*Email text input*/
-    Rectangle {
-        id: mail_input
-        color: "transparent"
-        width: 330; height: 70
-        x: (root.width)/(1280/3)
-        y: (root.height)/(720/18)
-        visible: false
-
-        MouseArea {
-            anchors.fill: parent
-            hoverEnabled: true
-            TextField {
-                id: textfield
-                anchors.horizontalCenter: parent.horizontalCenter
-                width: 300
-                height: 40
-                text: ""
-                onAccepted: focus = false
-                Keys.onEscapePressed: undo()
-            }
-            Row {
-                id: keyRow1
-                anchors.horizontalCenter: parent.horizontalCenter
-                anchors.top: textfield.bottom
-                anchors.topMargin: 20
-                Button {
-                    text: qsTr("OK")
-                    onClicked:
-                    {
-                        fileio.write("/mail_list.txt", textfield.text);
-                        set_to_hide_mail_input()
-                    }
+        /*Email text input*/
+        Rectangle {
+            id: mail_input
+            color: "transparent"
+            width: 330; height: 70
+            x: (root.width)/(1280/3)
+            y: (root.height)/(720/18)
+            visible: false
+
+            MouseArea {
+                anchors.fill: parent
+                hoverEnabled: true
+                TextField {
+                    id: textfield
+                    anchors.horizontalCenter: parent.horizontalCenter
+                    width: 300
+                    height: 40
+                    text: ""
+                    onAccepted: focus = false
+                    Keys.onEscapePressed: undo()
                 }
-                Button {
-                    text: qsTr("Cancel")
-                    onClicked:
-                    {
-                        set_to_hide_mail_input()
+                Row {
+                    id: keyRow1
+                    anchors.horizontalCenter: parent.horizontalCenter
+                    anchors.top: textfield.bottom
+                    anchors.topMargin: 20
+                    Button {
+                        text: qsTr("OK")
+                        onClicked:
+                        {
+                            fileio.write("/mail_list.txt", textfield.text);
+                            set_to_hide_mail_input()
+                        }
+                    }
+                    Button {
+                        text: qsTr("Cancel")
+                        onClicked:
+                        {
+                            set_to_hide_mail_input()
+                        }
                     }
                 }
             }
         }
-    }
 
-    /*Media service definition*/
-
-    /*display camera1*/
-    H264Streaming{
-        id: camera1
-        transmit: true //Camera1 Receiver & Transmitter
-        vspmWidth1: 1280
-        vspmHeight1: 720
-        vspmFormat: "BGRA"
-        encBitrate: 10485760
-        numPframes: 0
-        wlsOutWidth: (root.width)/(1280/960)
-        wlsOutHeight: (root.height)/(720/540)
-        wlsPositionX: 0
-        wlsPositionY: 0
-        wlsMaxLateness: -1
-        wlsQos: false
-        udpPort: "1234"
-        udpHost: "192.168.10.30"
-
-        onStatusChanged: {
-            if(camera1.playbackState == H264Streaming.VideoPlaying){
-                title_display1.visible = true
+        /*Media service definition*/
+
+        /*display camera1*/
+        H264Streaming{
+            id: camera1
+            transmit: true //Camera1 Receiver & Transmitter
+            vspmWidth1: 1280
+            vspmHeight1: 720
+            vspmFormat: "BGRA"
+            encBitrate: 10485760
+            numPframes: 0
+            wlsOutWidth: (root.width)/(1280/960)
+            wlsOutHeight: (root.height)/(720/540)
+            wlsPositionX: 0
+            wlsPositionY: 0
+            wlsMaxLateness: -1
+            wlsQos: false
+            udpPort: "1234"
+            udpHost: "192.168.10.30"
+
+            onStatusChanged: {
+                if(camera1.playbackState == H264Streaming.VideoPlaying){
+                    title_display1.visible = true
+                }
             }
-        }
-
-    }
 
+        }
 
 
-    /*display camera2*/
-    H264Streaming {
-        id: camera2
-        transmit: false//Camera 2: Receiver
-        wlsOutWidth: (root.width)/(1280/320)
-        wlsOutHeight: (root.height)/(720/240)
-        wlsPositionX: 1440
-        wlsPositionY: 5
-        wlsMaxLateness: -1
-        wlsQos: false
-        udpPort: "1235"
 
-        onStatusChanged: {
-            if(camera2.playbackState == H264Streaming.VideoPlaying){
-                title_display2.visible = true
+        /*display camera2*/
+        H264Streaming {
+            id: camera2
+            transmit: false//Camera 2: Receiver
+            wlsOutWidth: (root.width)/(1280/320)
+            wlsOutHeight: (root.height)/(720/240)
+            wlsPositionX: 1440
+            wlsPositionY: 5
+            wlsMaxLateness: -1
+            wlsQos: false
+            udpPort: "1235"
+
+            onStatusChanged: {
+                if(camera2.playbackState == H264Streaming.VideoPlaying){
+                    title_display2.visible = true
+                }
             }
         }
-    }
 
-    /*display camera3*/
-    H264Streaming {
-        id: camera3
-        transmit: false//Camera 3: Receiver
+        /*display camera3*/
+        H264Streaming {
+            id: camera3
+            transmit: false//Camera 3: Receiver
             wlsOutWidth: (root.width)/(1280/320)
             wlsOutHeight: (root.height)/(720/240)
             wlsPositionX: 1440
             wlsPositionY: (root.height)/(720/240)
-        wlsMaxLateness: -1
-        wlsQos: false
-        udpPort: "1236"
+            wlsMaxLateness: -1
+            wlsQos: false
+            udpPort: "1236"
 
-        onStatusChanged: {
-            if(camera3.playbackState == H264Streaming.VideoPlaying){
-                title_display3.visible = true
+            onStatusChanged: {
+                if(camera3.playbackState == H264Streaming.VideoPlaying){
+                    title_display3.visible = true
+                }
             }
         }
-    }
 
-    /*display camera4*/
-    H264Streaming {
-        id: camera4
-        transmit: false//Camera 4: Receiver
+        /*display camera4*/
+        H264Streaming {
+            id: camera4
+            transmit: false//Camera 4: Receiver
             wlsOutWidth: (root.width)/(1280/320)
             wlsOutHeight: (root.height)/(720/240)
             wlsPositionX: 1440
             wlsPositionY: ((root.height)/(720/240))*2
-        wlsMaxLateness: -1
-        wlsQos: false
-        udpPort: "1237"
+            wlsMaxLateness: -1
+            wlsQos: false
+            udpPort: "1237"
 
-        onStatusChanged: {
-            if(camera4.playbackState == H264Streaming.VideoPlaying){
-                title_display4.visible = true
+            onStatusChanged: {
+                if(camera4.playbackState == H264Streaming.VideoPlaying){
+                    title_display4.visible = true
+                }
             }
         }
-    }
 
-    /*send audio*/
-    AudioStreaming {
-        id: austream_send
-        type: "Send"
-        audioPlugin: "Alsa GST"
-        usinkHost: "192.168.10.101"
-        usinkPort: 2001
-        usinkSync: false
+        /*send audio*/
+        AudioStreaming {
+            id: austream_send
+            type: "Send"
+            audioPlugin: "Alsa GST"
+            usinkHost: "192.168.10.101"
+            usinkPort: 2001
+            usinkSync: false
 
-        onStatusChanged: {
+            onStatusChanged: {
 
-        }
+            }
 
-        onStateChanged: {
+            onStateChanged: {
 
+            }
         }
-    }
 
-    /*receive audio*/
-    AudioStreaming {
-        id: austream_receive
-        type: "Receive"
-        audioPlugin: "Alsa GST"
-        usrcPort: 2000
+        /*receive audio*/
+        AudioStreaming {
+            id: austream_receive
+            type: "Receive"
+            audioPlugin: "Alsa GST"
+            usrcPort: 2000
 
-        onStatusChanged: {
+            onStatusChanged: {
 
-        }
+            }
 
-        onStateChanged: {
+            onStateChanged: {
 
+            }
         }
-    }
 
-    /*record camera*/
-    MP4Recorder {
-        id: mp4_recorder
-        usrcPort: 1234
-        fSinkLocation: "/record.mp4"
+        /*record camera*/
+        MP4Recorder {
+            id: mp4_recorder
+            usrcPort: 1234
+            fSinkLocation: "/record.mp4"
 
-        onStatusChanged: {
+            onStatusChanged: {
+            }
         }
-    }
 
-    /*play recorded video*/
-    MP4Playback {
-        id: mediaplayer
-        loop: true
-        source: "/record.mp4"
+        /*play recorded video*/
+        MP4Playback {
+            id: mediaplayer
+            loop: true
+            source: "/record.mp4"
 
-        onStateChanged: {
-            if(mediaplayer.state == MP4Playback.PlayingState){
-                title_display1.opacity = 0
-                onplayback = true
-            }
-            else if(mediaplayer.state == MP4Playback.StoppedState){
-                onplayback = false
-                if(mediaplayer.status == MP4Playback.NoMedia){
-                    title_display1.opacity = 1
+            onStateChanged: {
+                if(mediaplayer.state == MP4Playback.PlayingState){
+                    title_display1.opacity = 0
+                    onplayback = true
+                }
+                else if(mediaplayer.state == MP4Playback.StoppedState){
+                    onplayback = false
+                    if(mediaplayer.status == MP4Playback.NoMedia){
+                        title_display1.opacity = 1
+                    }
+                }
+                else if((mediaplayer.state == MP4Playback.PausedState) || (mediaplayer.state == MP4Playback.ReadyState)){
+                    onplayback = true
                 }
-            }
-            else if((mediaplayer.state == MP4Playback.PausedState) || (mediaplayer.state == MP4Playback.ReadyState)){
-				onplayback = true
             }
         }
-    }
 
-    /*MEM/CPU measurement*/
+        /*MEM/CPU measurement*/
 
-    /*CPU monitor*/
-    CpuMonitor{
-        id: cpu
+        /*CPU monitor*/
+        CpuMonitor{
+            id: cpu
             height: (root.height)/(720/120)
             width: (root.width)/(1280/444)
             x: (root.width)/(1280/19)
             y: (root.height)/(720/572)
-        //Adjust the gap between each CPU core display
-        m_offset: 2
+            //Adjust the gap between each CPU core display
+            m_offset: 2
         }
-        
+
         /*MEM monitor*/
         MemMonitor {
             id: mem
@@ -3621,68 +3621,68 @@ Rectangle {
 
         /* CPU Monitor Text */
         Text {
-              id: t_cpu
-              x: (root.width)/(1280/30)
-              y: (root.height)/(720/545)
+            id: t_cpu
+            x: (root.width)/(1280/30)
+            y: (root.height)/(720/545)
             text: "CPU"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
         Text {
-              id: t_cpu_usage
-              x: (root.width)/(1280/25)
-              y: t_cpu.y + (root.height)/(720/10)
+            id: t_cpu_usage
+            x: (root.width)/(1280/25)
+            y: t_cpu.y + (root.height)/(720/10)
             text: "Usage"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
-        
+
         Text {
-              id: t_cpu1
-              x: (root.width)/(1280/150)
-              y: t_cpu.y
+            id: t_cpu1
+            x: (root.width)/(1280/150)
+            y: t_cpu.y
             text: "CPU1"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
         Text {
-              id: t_cpu1_history
-              x: (root.width)/(1280/145)
-              y: t_cpu_usage.y
+            id: t_cpu1_history
+            x: (root.width)/(1280/145)
+            y: t_cpu_usage.y
             text: "History"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
-        
+
         Text {
-              id: t_cpu2
-              x: (root.width)/(1280/348)
-              y: t_cpu.y
+            id: t_cpu2
+            x: (root.width)/(1280/348)
+            y: t_cpu.y
             text: "CPU2"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
-            
+
         }
         Text {
-              id: t_cpu2_history
-              x: (root.width)/(1280/343)
-              y: t_cpu_usage.y
+            id: t_cpu2_history
+            x: (root.width)/(1280/343)
+            y: t_cpu_usage.y
             text: "History"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
 
-          /* MEM Monitor Text */
+        /* MEM Monitor Text */
         Text {
             id: mem_usage_text
-              x: (root.width)/(1280/480)
-              y: bus_reading.y
+            x: (root.width)/(1280/480)
+            y: bus_reading.y
             text: "0.0"
             font.family: "Comic Sans MS"
             font.pointSize: 9
@@ -3691,8 +3691,8 @@ Rectangle {
         }
 
         Text {
-              id: mem_usage_text_unit
-              x: mem_usage_text.x + (root.width)/(1280/24)
+            id: mem_usage_text_unit
+            x: mem_usage_text.x + (root.width)/(1280/24)
             y: mem_usage_text.y
             text: "GB"
             font.family: "Comic Sans MS"
@@ -3702,158 +3702,158 @@ Rectangle {
         }
 
         Text {
-              id: t_mem
-              x: (root.width)/(1280/485)
-              y: t_cpu.y
+            id: t_mem
+            x: (root.width)/(1280/485)
+            y: t_cpu.y
             text: "MEM"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
         Text {
-              id: t_mem_usage
-              x: (root.width)/(1280/482)
-              y: t_cpu_usage.y
+            id: t_mem_usage
+            x: (root.width)/(1280/482)
+            y: t_cpu_usage.y
             text: "Usage"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
-        
+
         Text {
-              id: t_mem1
-              x: (root.width)/(1280/618)
-              y: t_cpu.y
+            id: t_mem1
+            x: (root.width)/(1280/618)
+            y: t_cpu.y
             text: "MEM"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
         }
         Text {
-              id: t_mem1_history
-              x: (root.width)/(1280/613)
-              y: t_cpu_usage.y
+            id: t_mem1_history
+            x: (root.width)/(1280/613)
+            y: t_cpu_usage.y
             text: "History"
             font.family: "Comic Sans MS"
             font.pointSize: 9
             color: "White"
-    }
+        }
 
-          /* PulseSignal Monitor Text */
-    Text {
-              id: t_bus
-              x: (root.width)/(1280/823)
-              y: t_cpu.y
-              text: "BUS"
-              font.family: "Comic Sans MS"
-              font.pointSize: 9
-              color: "White"
-    }
-    Text {
-              id: t_bus_usage
-              x: (root.width)/(1280/818)
-              y: t_cpu_usage.y
-              text: "Usage"
-              font.family: "Comic Sans MS"
-              font.pointSize: 9
-              color: "White"
-    }
+        /* PulseSignal Monitor Text */
+        Text {
+            id: t_bus
+            x: (root.width)/(1280/823)
+            y: t_cpu.y
+            text: "BUS"
+            font.family: "Comic Sans MS"
+            font.pointSize: 9
+            color: "White"
+        }
+        Text {
+            id: t_bus_usage
+            x: (root.width)/(1280/818)
+            y: t_cpu_usage.y
+            text: "Usage"
+            font.family: "Comic Sans MS"
+            font.pointSize: 9
+            color: "White"
+        }
 
-    Text {
-              id: bus_monitor_text
-              x: (root.width)/(1280/10)
-              y: (root.height)/(720/480)
-              text: ""
-              font.family: "Comic Sans MS"
-              font.pointSize: 9
-              color: "White"
+        Text {
+            id: bus_monitor_text
+            x: (root.width)/(1280/10)
+            y: (root.height)/(720/480)
+            text: ""
+            font.family: "Comic Sans MS"
+            font.pointSize: 9
+            color: "White"
 
-    }
+        }
 
-    /*Text indicate BUS Read value*/
-    Text {
-        id: bus_reading
-              x:bus_graphic.x + (root.width)/(1280/10)
-              y:bus_graphic.y + bus_graphic.height + (root.height)/(720/-1)
-        z:5
-        text: "READ: "
-        color: "green"
-        font.family: "Comic Sans MS"
-              font.pointSize: 7
+        /*Text indicate BUS Read value*/
+        Text {
+            id: bus_reading
+            x:bus_graphic.x + (root.width)/(1280/10)
+            y:bus_graphic.y + bus_graphic.height + (root.height)/(720/-1)
+            z:5
+            text: "READ: "
+            color: "green"
+            font.family: "Comic Sans MS"
+            font.pointSize: 7
 
-    }
+        }
 
-    /*Text indicate BUS Read value*/
-    Text {
-        id: bus_writing
-              x: bus_reading.x + bus_graphic.width/2 + (root.width)/(1280/15)
-        y: bus_reading.y
-        z:5
-        text: "WRITE: "
-        color: "red"
-        font.family: "Comic Sans MS"
-              font.pointSize: 7
+        /*Text indicate BUS Read value*/
+        Text {
+            id: bus_writing
+            x: bus_reading.x + bus_graphic.width/2 + (root.width)/(1280/15)
+            y: bus_reading.y
+            z:5
+            text: "WRITE: "
+            color: "red"
+            font.family: "Comic Sans MS"
+            font.pointSize: 7
 
-    }
+        }
 
         /*BUS Load Measurement*/
 
-    //    /*Text indicator*/
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y - (root.height)/(720/1); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: "1800"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/10); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: "1600"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/20); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: "1400"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/30); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: "1200"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/40); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: "1000"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/49); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: " 800"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/59); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: " 600"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/68); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: " 400"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/77); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: " 200"
-    //    }
-    //    Text {
-    //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/86); z:5
-    //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
-    //        text: "   0"
-    //    }
-
-
-    /*Control DDR BUS measurement*/
+        //    /*Text indicator*/
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y - (root.height)/(720/1); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: "1800"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/10); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: "1600"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/20); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: "1400"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/30); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: "1200"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/40); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: "1000"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/49); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: " 800"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/59); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: " 600"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/68); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: " 400"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/77); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: " 200"
+        //    }
+        //    Text {
+        //        x:bus_graphic.x - (root.width)/(1280/32); y:bus_graphic.y + (root.height)/(720/86); z:5
+        //        color: "white"; font.family: "Comic Sans MS"; font.pointSize: 8
+        //        text: "   0"
+        //    }
+
+
+        /*Control DDR BUS measurement*/
         Rectangle {
-        id: ddrBt
+            id: ddrBt
             x: bus_graphic.x - 1
             y: bus_graphic.y - (root.height)/(720/15)
             z:6
@@ -3864,15 +3864,15 @@ Rectangle {
             border.color: "#a5efec"
             MouseArea {
                 anchors.fill: parent
-        onClicked: {
-            if(measuretype != "Memory"){
-                if(measuretype != "none"){ //active
-                    axist.inactive()
-                }
-                measuretype = "Memory"
-                bus_graphic.resetData()
-                axist.active()
-            }
+                onClicked: {
+                    if(measuretype != "Memory"){
+                        if(measuretype != "none"){ //active
+                            axist.inactive()
+                        }
+                        measuretype = "Memory"
+                        bus_graphic.resetData()
+                        axist.active()
+                    }
                     ddrBt.color = "transparent"
                     cpuBt.color = "blue"
                     gpuBt.color = "blue"
@@ -3885,12 +3885,12 @@ Rectangle {
                 anchors.verticalCenter: ddrBt.verticalCenter
                 font.family: "Comic Sans MS"
                 font.pointSize: 8
+            }
         }
-    }
 
-    /*Control CPU BUS measurement*/
+        /*Control CPU BUS measurement*/
         Rectangle {
-        id: cpuBt
+            id: cpuBt
             x: ddrBt.x + ddrBt.width + 2
             y: ddrBt.y
             z:6
@@ -3901,16 +3901,16 @@ Rectangle {
             border.color: "#a5efec"
             MouseArea {
                 anchors.fill: parent
-        onClicked: {
-            if(measuretype != "CPU"){
-                axist.filter = 2
-                if(measuretype != "none"){ //active
-                    axist.inactive()
-                }
-                measuretype = "CPU"
-                bus_graphic.resetData()
-                axist.active()
-            }
+                onClicked: {
+                    if(measuretype != "CPU"){
+                        axist.filter = 2
+                        if(measuretype != "none"){ //active
+                            axist.inactive()
+                        }
+                        measuretype = "CPU"
+                        bus_graphic.resetData()
+                        axist.active()
+                    }
                     cpuBt.color = "transparent"
                     ddrBt.color = "blue"
                     gpuBt.color = "blue"
@@ -3923,14 +3923,14 @@ Rectangle {
                 anchors.verticalCenter: cpuBt.verticalCenter
                 font.family: "Comic Sans MS"
                 font.pointSize: 8
+            }
         }
-    }
 
-    /*Control GPU BUS measurement*/
+        /*Control GPU BUS measurement*/
         Rectangle {
-        id: gpuBt
-        x: cpuBt.x + cpuBt.width + 2
-        y: cpuBt.y
+            id: gpuBt
+            x: cpuBt.x + cpuBt.width + 2
+            y: cpuBt.y
             z:6
             height: (root.height)/(720/11)
             width: (root.width)/(1280/35)
@@ -3939,29 +3939,29 @@ Rectangle {
             border.color: "#a5efec"
             MouseArea {
                 anchors.fill: parent
-        onClicked: {
-            if(measuretype != "GPU"){
-                if(measuretype != "none"){ //active
-                    axist.inactive()
-                }
-                axist.filter = 1
-                measuretype = "GPU"
-                bus_graphic.resetData()
-                axist.active()
-            }
+                onClicked: {
+                    if(measuretype != "GPU"){
+                        if(measuretype != "none"){ //active
+                            axist.inactive()
+                        }
+                        axist.filter = 1
+                        measuretype = "GPU"
+                        bus_graphic.resetData()
+                        axist.active()
+                    }
                     gpuBt.color = "transparent"
                     cpuBt.color = "blue"
                     ddrBt.color = "blue"
-        }
-    }
-        Text {
+                }
+            }
+            Text {
                 text: "GPU"
                 color: "orange"
                 anchors.horizontalCenter: gpuBt.horizontalCenter
                 anchors.verticalCenter: gpuBt.verticalCenter
-            font.family: "Comic Sans MS"
+                font.family: "Comic Sans MS"
                 font.pointSize: 8
-        }
+            }
         }
 
         Rectangle {
@@ -3974,383 +3974,383 @@ Rectangle {
             color: "transparent"
             border.width: 0.5
             border.color: "#a5efec"
-    }
+        }
 
 
-    /*BUS Monitor*/
-    Axistat {
-        id: axist
-        pattern: 1
-        // filter: 2
-        onAxistatStateChanged: {
-            if(axist.axistatstate == Axistat.InActivatedState){
-            }else if(axist.axistatstate == Axistat.ActivatedState){
+        /*BUS Monitor*/
+        Axistat {
+            id: axist
+            pattern: 1
+            // filter: 2
+            onAxistatStateChanged: {
+                if(axist.axistatstate == Axistat.InActivatedState){
+                }else if(axist.axistatstate == Axistat.ActivatedState){
+                }
             }
-        }
-        
-        onMemoryChanged: {
-            if(measuretype == "Memory") {
-                bus_reading.text = "DDR R:" + axist.DDRR + "MB/s"
-                bus_writing.text = "DDR W:" + axist.DDRW + "MB/s"
-                bus_graphic.updateData(axist.DDRR, axist.DDRW)
+
+            onMemoryChanged: {
+                if(measuretype == "Memory") {
+                    bus_reading.text = "DDR R:" + axist.DDRR + "MB/s"
+                    bus_writing.text = "DDR W:" + axist.DDRW + "MB/s"
+                    bus_graphic.updateData(axist.DDRR, axist.DDRW)
+                }
             }
-        }
-        
-        onGpuChanged: {
-            // displayGPU.text = "GPU: R= " + axist.GPUR + " MB/s, W= " + axist.GPUW + " MB/s"
-            if(measuretype == "GPU") {
-                bus_reading.text = "GPU R:" + axist.GPUR + "MB/s"
-                bus_writing.text = "GPU W:" + axist.GPUW + "MB/s"
-                bus_graphic.updateData(axist.GPUR, axist.GPUW)
+
+            onGpuChanged: {
+                // displayGPU.text = "GPU: R= " + axist.GPUR + " MB/s, W= " + axist.GPUW + " MB/s"
+                if(measuretype == "GPU") {
+                    bus_reading.text = "GPU R:" + axist.GPUR + "MB/s"
+                    bus_writing.text = "GPU W:" + axist.GPUW + "MB/s"
+                    bus_graphic.updateData(axist.GPUR, axist.GPUW)
+                }
             }
-        }
-        
-        onCpuChanged: {
-            // displayCPU.text = "CPU: R= " + axist.CPUR + " MB/s, W= " + axist.CPUW + " MB/s"
-            if(measuretype == "CPU") {
-                bus_reading.text = "CPU R:" + axist.CPUR + "MB/s"
-                bus_writing.text = "CPU W:" + axist.CPUW + "MB/s"
-                bus_graphic.updateData(axist.CPUR, axist.CPUW)
+
+            onCpuChanged: {
+                // displayCPU.text = "CPU: R= " + axist.CPUR + " MB/s, W= " + axist.CPUW + " MB/s"
+                if(measuretype == "CPU") {
+                    bus_reading.text = "CPU R:" + axist.CPUR + "MB/s"
+                    bus_writing.text = "CPU W:" + axist.CPUW + "MB/s"
+                    bus_graphic.updateData(axist.CPUR, axist.CPUW)
+                }
             }
         }
-    }
 
-    /*Timer*/
-    Timer {
-        id: timer
-        interval: 1000
-        running: true
-        repeat: true
-        onTriggered: {
-          currentTime = new Date()
-          time.text = currentTime.toLocaleString(locale, Locale.LongFormat)
-          
-          //print memory usage
-          memory_usage = Get_MEM.getUsedMem()/1073741824
-          mem_usage_text.text = (memory_usage.toFixed(1)).toString()
-          
-          if(timer_counter == 3) {
-            // start turning off welcome slide
-            enable_lost = true
-            
-            // start talking
-            //austream_send.talk()
-            //austream_receive.talk()
-
-            //start Bus Load measurement
-            if(measuretype != "none"){ //active
-              axist.inactive()
+        /*Timer*/
+        Timer {
+            id: timer
+            interval: 1000
+            running: true
+            repeat: true
+            onTriggered: {
+                currentTime = new Date()
+                time.text = currentTime.toLocaleString(locale, Locale.LongFormat)
+
+                //print memory usage
+                memory_usage = Get_MEM.getUsedMem()/1073741824
+                mem_usage_text.text = (memory_usage.toFixed(1)).toString()
+
+                if(timer_counter == 3) {
+                    // start turning off welcome slide
+                    enable_lost = true
+
+                    // start talking
+                    //austream_send.talk()
+                    //austream_receive.talk()
+
+                    //start Bus Load measurement
+                    if(measuretype != "none"){ //active
+                        axist.inactive()
+                    }
+                    axist.filter = 1
+                    measuretype = "Memory"
+                    bus_graphic.resetData()
+                    axist.active()
+                    //bus_monitor_text.text = "DDR Monitoring"
+
+                    //prevent this block is called again
+                    timer_counter = 1 + timer_counter
+                } else if(timer_counter == 5){
+                    //turn off welcome slide
+                    welcome.visible = false
+
+                    streamurl.text = "rtsp://" + ip_string + ":8554/rtsp"
+
+                    // prevent this block is called again
+                    timer_counter = 1 + timer_counter
+                }else if(timer_counter == 7){
+                    // start video streaming
+                    camera1.play()
+                    camera2.play()
+                    camera3.play()
+                    camera4.play()
+                    timer.stop()
+                }else if(timer_counter < 7){
+                    timer_counter = 1 + timer_counter
+                }
             }
-            axist.filter = 1
-            measuretype = "Memory"
-            bus_graphic.resetData()
-            axist.active()
-                //bus_monitor_text.text = "DDR Monitoring"
-
-            //prevent this block is called again
-            timer_counter = 1 + timer_counter
-          } else if(timer_counter == 5){
-            //turn off welcome slide
-            welcome.visible = false
-
-                streamurl.text = "rtsp://" + ip_string + ":8554/rtsp"
-
-                // prevent this block is called again
-                timer_counter = 1 + timer_counter
-              }else if(timer_counter == 7){
-            // start video streaming
-            camera1.play()
-            camera2.play()
-            camera3.play()
-            camera4.play()
-                  timer.stop()
-              }else if(timer_counter < 7){
-            timer_counter = 1 + timer_counter
-          }
         }
-    }
 
-    Text {
-        id: time
-        x:  root.width - time.width - (root.width)/(1280/320) - (root.width)/(1280/10)
-        y:  (root.height)/(720/510)
-        font.family: "Comic Sans MS"
-        font.pointSize: 9
-        color: "Yellow"
-        
-    }
+        Text {
+            id: time
+            x:  root.width - time.width - (root.width)/(1280/320) - (root.width)/(1280/10)
+            y:  (root.height)/(720/510)
+            font.family: "Comic Sans MS"
+            font.pointSize: 9
+            color: "Yellow"
 
-    Text {
-        id: streamurl
-        x:  root.width - streamurl.width - (root.width)/(1280/320) - (root.width)/(1280/10)
-        y:  (root.height)/(720/35)
-        font.family: "Comic Sans MS"
-        font.pointSize: 9
-        color: "Orange"
-    }
+        }
+
+        Text {
+            id: streamurl
+            x:  root.width - streamurl.width - (root.width)/(1280/320) - (root.width)/(1280/10)
+            y:  (root.height)/(720/35)
+            font.family: "Comic Sans MS"
+            font.pointSize: 9
+            color: "Orange"
+        }
 
 
-    /*Welcome screen*/
-    Rectangle {
-        id: welcome
-        color: "Black"
+        /*Welcome screen*/
+        Rectangle {
+            id: welcome
+            color: "Black"
             x: 0; y: 0; z: 10; width: root.width; height: root.height
 
-        Image {
-          id: sun
-          source: "pics/Sun.png"
-              x:  (root.width)/(1280/(-100))
-              y:  (root.height)/(720/(-260))
-          opacity: 0.0
+            Image {
+                id: sun
+                source: "pics/Sun.png"
+                x:  (root.width)/(1280/(-100))
+                y:  (root.height)/(720/(-260))
+                opacity: 0.0
 
-          //scale: 0.2
+                //scale: 0.2
 
-          states: State {
-              name: "light"; when: enable_light
-              PropertyChanges { target: sun; opacity: 1 }
-          }
+                states: State {
+                    name: "light"; when: enable_light
+                    PropertyChanges { target: sun; opacity: 1 }
+                }
 
-          transitions: Transition {
-              NumberAnimation { properties: "opacity" ; duration: 3000}
-          }
-        }
+                transitions: Transition {
+                    NumberAnimation { properties: "opacity" ; duration: 3000}
+                }
+            }
 
-        states: State {
-              name: "lost"; when: enable_lost
-              PropertyChanges { target: welcome; opacity: 0}
-          }
+            states: State {
+                name: "lost"; when: enable_lost
+                PropertyChanges { target: welcome; opacity: 0}
+            }
 
-        transitions: Transition {
-              NumberAnimation { properties: "opacity" ; duration: 2000}
-          }
+            transitions: Transition {
+                NumberAnimation { properties: "opacity" ; duration: 2000}
+            }
+
+            Image {
+                id: welcome_image
+                source: "pics/Welcome_transparent.png"
+                anchors.fill: parent
+            }
 
-        Image {
-          id: welcome_image
-          source: "pics/Welcome_transparent.png"
-              anchors.fill: parent
         }
-        
-    }
-    
-    /*List view for file in folder*/
-    Rectangle {
-		id: listViewRect
-		width: 330
-		height: 250
-		border.color: "grey"
-		border.width: 1
-		radius: 20
-		x: (root.width)/(1280/(-330)); y: (root.height)/(720/190); z: 10;
-		visible: false
-		gradient: Gradient {
-			GradientStop { position: 0.0; color: "grey" }
-			GradientStop { position: 0.1; color: "#3d3c42" }
-		}
-		opacity: 0.9
-
-		states: [
-			State {
-				name: "stage1"; when: isShowRecList == true
-				PropertyChanges { target: listViewRect; x: 0; visible: true }
-			},
-			State {
-				name: "stage2"; when: isShowRecList == false
-				PropertyChanges { target: listViewRect; x: -330; visible: false}
-			}
-		]
-		
-		transitions: [
-			Transition {
-				from: "stage2"; to: "stage1"
-				PropertyAnimation { property: "visible"}
-				PropertyAnimation { property: "x"; duration: 800 }
-			},
-			Transition {
-				from: "stage1"; to: "stage2"
-				PropertyAnimation { property: "x"; duration: 600 }
-				PropertyAnimation { property: "visible"; duration: 600 }
-			}
-		]
-
-		ListView {
-			id: listView
-			width: 315
-			height: 185
-			x: (root.width)/(1280/10); y: (root.height)/(720/20);
-			highlight: Rectangle { color: "red"; radius: 3 ; opacity: 0.7 }
-			highlightFollowsCurrentItem: true
-			highlightMoveVelocity: 900 //Speed of movement highlightItem
-			cacheBuffer: 0
-			currentIndex: -1 // set invisible to highlightitem
-
-			FolderListModel {
-				id: folderModel
-				showDirs: false
-				sortField: "Name"
-				showFiles: true
-				nameFilters: ["*.mp4"]
-				folder: "file:///"
-			}
-
-			Component {
-				id: fileDelegate
-				
-				Item {
-					id: lwEleItem
-					width: 315
-					height: 30
-					z: 11
-					Text {
-						color: "#FFFFFF"
-						text: index + " - "
-					}
-					Text {
-						id: fName
-						color: "#FFFFFF"
-						text: fileName
-						x: (root.width)/(1280/30)
-					}
-					
-					// Highlight selected item
-					MouseArea {
-						//hoverEnabled: true
-						anchors.fill: parent
-						onClicked: {
-							listView.currentIndex = index
-							selected_file = fileName
-						}
-						
-						onPositionChanged: {
-							if (pressed == true) {
-								listView.currentIndex = -1
-							}
-						}
-						onWheel: listView.currentIndex = -1
-					}
-				}
-			}
-			model: folderModel
-			delegate: fileDelegate
-		}
-		
-		Rectangle {
-			//id: titleRlRect
-			y: (root.height)/(720/(-10))
-			width: 330
-			height: 30
-			border.color: "grey"
-			border.width: 1
-			radius: 20
-			
-			Text {
-				x: (root.width)/(1280/50)
-				y: (root.height)/(720/5)
-				text: "Please slelect recorded file to play" 
-			}
-			
-			gradient: Gradient {
-				GradientStop { position: 0.0; color: "lightsteelblue" }
-				GradientStop { position: 1.0; color: "#3d3c42" }
-			}
-		}
-		
-		/*Cancel recording list Button*/
-		Rectangle {
-			id: cancelRlBt
-			//x: 10
-			y: (root.height)/(720/220)
-			width: 150
-			height: 30
-			color: "transparent"
-			
-			Image {
-				id: cancelRlBt_image
-				anchors.verticalCenter: cancelRlBt.verticalCenter
-				anchors.horizontalCenter: cancelRlBt.horizontalCenter
-				//anchors.horizontalCenter: nameText.horizontalCenter
-				width: 150
-				height: 30
-				source: "pics/button_cancel.png"
-			}
-			
-			MouseArea {
-				anchors.fill: parent
-				hoverEnabled: true
-				onEntered: {
-					cancelRlBt_image.source = "pics/button_cancel_bright.png"
-				}
-				
-				onExited: {
-					cancelRlBt_image.source = "pics/button_cancel.png"
-				}
-				
-				onPressed: {
-					cancelRlBt_image.scale = 0.9
-				}
-				
-				onReleased: {
-					cancelRlBt_image.scale = 1.0
-				}
-				
-				onClicked: {
-					isShowRecList = false;
-					set_to_active_all(play_id)
-					set_to_active(play_id)
-					set_to_active_all_list()
-				}
-			}
-		}
-		
-		/*Recording list OK Button*/
-		Rectangle {
-			id: okRlBt
-			x: (root.width)/(1280/175)
-			y: (root.height)/(720/220)
-			color: "transparent"
-			width: 150
-			height: 30
-			
-			Image {
-				id: okRlBt_image
-				anchors.verticalCenter: okRlBt.verticalCenter
-				anchors.horizontalCenter: okRlBt.horizontalCenter
-				//anchors.horizontalCenter: nameText.horizontalCenter
-				width: 150
-				height: 30
-				source: "pics/button_ok.png"
-			}
-			
-			MouseArea {
-				anchors.fill: parent
-				hoverEnabled: true
-				onEntered: {
-					okRlBt_image.source = "pics/button_ok_bright.png"
-				}
-				
-				onExited: {
-					okRlBt_image.source = "pics/button_ok.png"
-				}
-				
-				onPressed: {
-					okRlBt_image.scale = 0.9
-				}
-				
-				onReleased: {
-					okRlBt_image.scale = 1.0
-				}
-				
-				onClicked: {
-					if ((listView.currentIndex != -1) && (selected_file != "")) {
-						mediaplayer.source = "/" + selected_file
-						console.log("You chose: " + mediaplayer.source)
-						mediaplayer.play()
-						isShowRecList = false
-						
-						//set icon state
-						set_to_inactive_all(play_id)
-						set_to_active(play_id)
-						set_to_active(stop_id)
-						switch (pathv.model) {
+
+        /*List view for file in folder*/
+        Rectangle {
+            id: listViewRect
+            width: 330
+            height: 250
+            border.color: "grey"
+            border.width: 1
+            radius: 20
+            x: (root.width)/(1280/(-330)); y: (root.height)/(720/190); z: 10;
+            visible: false
+            gradient: Gradient {
+                GradientStop { position: 0.0; color: "grey" }
+                GradientStop { position: 0.1; color: "#3d3c42" }
+            }
+            opacity: 0.9
+
+            states: [
+                State {
+                    name: "stage1"; when: isShowRecList == true
+                    PropertyChanges { target: listViewRect; x: 0; visible: true }
+                },
+                State {
+                    name: "stage2"; when: isShowRecList == false
+                    PropertyChanges { target: listViewRect; x: -330; visible: false}
+                }
+            ]
+
+            transitions: [
+                Transition {
+                    from: "stage2"; to: "stage1"
+                    PropertyAnimation { property: "visible"}
+                    PropertyAnimation { property: "x"; duration: 800 }
+                },
+                Transition {
+                    from: "stage1"; to: "stage2"
+                    PropertyAnimation { property: "x"; duration: 600 }
+                    PropertyAnimation { property: "visible"; duration: 600 }
+                }
+            ]
+
+            ListView {
+                id: listView
+                width: 315
+                height: 185
+                x: (root.width)/(1280/10); y: (root.height)/(720/20);
+                highlight: Rectangle { color: "red"; radius: 3 ; opacity: 0.7 }
+                highlightFollowsCurrentItem: true
+                highlightMoveVelocity: 900 //Speed of movement highlightItem
+                cacheBuffer: 0
+                currentIndex: -1 // set invisible to highlightitem
+
+                FolderListModel {
+                    id: folderModel
+                    showDirs: false
+                    sortField: "Name"
+                    showFiles: true
+                    nameFilters: ["*.mp4"]
+                    folder: "file:///"
+                }
+
+                Component {
+                    id: fileDelegate
+
+                    Item {
+                        id: lwEleItem
+                        width: 315
+                        height: 30
+                        z: 11
+                        Text {
+                            color: "#FFFFFF"
+                            text: index + " - "
+                        }
+                        Text {
+                            id: fName
+                            color: "#FFFFFF"
+                            text: fileName
+                            x: (root.width)/(1280/30)
+                        }
+
+                        // Highlight selected item
+                        MouseArea {
+                            //hoverEnabled: true
+                            anchors.fill: parent
+                            onClicked: {
+                                listView.currentIndex = index
+                                selected_file = fileName
+                            }
+
+                            onPositionChanged: {
+                                if (pressed == true) {
+                                    listView.currentIndex = -1
+                                }
+                            }
+                            onWheel: listView.currentIndex = -1
+                        }
+                    }
+                }
+                model: folderModel
+                delegate: fileDelegate
+            }
+
+            Rectangle {
+                //id: titleRlRect
+                y: (root.height)/(720/(-10))
+                width: 330
+                height: 30
+                border.color: "grey"
+                border.width: 1
+                radius: 20
+
+                Text {
+                    x: (root.width)/(1280/50)
+                    y: (root.height)/(720/5)
+                    text: "Please slelect recorded file to play"
+                }
+
+                gradient: Gradient {
+                    GradientStop { position: 0.0; color: "lightsteelblue" }
+                    GradientStop { position: 1.0; color: "#3d3c42" }
+                }
+            }
+
+            /*Cancel recording list Button*/
+            Rectangle {
+                id: cancelRlBt
+                //x: 10
+                y: (root.height)/(720/220)
+                width: 150
+                height: 30
+                color: "transparent"
+
+                Image {
+                    id: cancelRlBt_image
+                    anchors.verticalCenter: cancelRlBt.verticalCenter
+                    anchors.horizontalCenter: cancelRlBt.horizontalCenter
+                    //anchors.horizontalCenter: nameText.horizontalCenter
+                    width: 150
+                    height: 30
+                    source: "pics/button_cancel.png"
+                }
+
+                MouseArea {
+                    anchors.fill: parent
+                    hoverEnabled: true
+                    onEntered: {
+                        cancelRlBt_image.source = "pics/button_cancel_bright.png"
+                    }
+
+                    onExited: {
+                        cancelRlBt_image.source = "pics/button_cancel.png"
+                    }
+
+                    onPressed: {
+                        cancelRlBt_image.scale = 0.9
+                    }
+
+                    onReleased: {
+                        cancelRlBt_image.scale = 1.0
+                    }
+
+                    onClicked: {
+                        isShowRecList = false;
+                        set_to_active_all(play_id)
+                        set_to_active(play_id)
+                        set_to_active_all_list()
+                    }
+                }
+            }
+
+            /*Recording list OK Button*/
+            Rectangle {
+                id: okRlBt
+                x: (root.width)/(1280/175)
+                y: (root.height)/(720/220)
+                color: "transparent"
+                width: 150
+                height: 30
+
+                Image {
+                    id: okRlBt_image
+                    anchors.verticalCenter: okRlBt.verticalCenter
+                    anchors.horizontalCenter: okRlBt.horizontalCenter
+                    //anchors.horizontalCenter: nameText.horizontalCenter
+                    width: 150
+                    height: 30
+                    source: "pics/button_ok.png"
+                }
+
+                MouseArea {
+                    anchors.fill: parent
+                    hoverEnabled: true
+                    onEntered: {
+                        okRlBt_image.source = "pics/button_ok_bright.png"
+                    }
+
+                    onExited: {
+                        okRlBt_image.source = "pics/button_ok.png"
+                    }
+
+                    onPressed: {
+                        okRlBt_image.scale = 0.9
+                    }
+
+                    onReleased: {
+                        okRlBt_image.scale = 1.0
+                    }
+
+                    onClicked: {
+                        if ((listView.currentIndex != -1) && (selected_file != "")) {
+                            mediaplayer.source = "/" + selected_file
+                            console.log("You chose: " + mediaplayer.source)
+                            mediaplayer.play()
+                            isShowRecList = false
+
+                            //set icon state
+                            set_to_inactive_all(play_id)
+                            set_to_active(play_id)
+                            set_to_active(stop_id)
+                            switch (pathv.model) {
                             case list_icon_red: {
                                 status_text1.source = text_playing_red
                                 break
@@ -4371,81 +4371,81 @@ Rectangle {
                                 status_text1.source = text_playing_yellow
                                 break
                             }
+                            }
+                            status_text2.source = ""
+
+                            if ( pathv.model.get(play_id).state == icon_normal_state ) {
+                                pathv.model.setProperty(play_id, "icon", pathv.model.get(play_id).icon_pressed)
+                                pathv.model.setProperty(play_id, "state", icon_pressed_state)
+                            }
                         }
-						status_text2.source = ""
-						
-						if ( pathv.model.get(play_id).state == icon_normal_state ) {
-							pathv.model.setProperty(play_id, "icon", pathv.model.get(play_id).icon_pressed)
-							pathv.model.setProperty(play_id, "state", icon_pressed_state)
-						}
-					}
-				}
-			}
-		}
-	}
-
-	FolderListModel {
-
-        id: folderModel1
-        showFiles : true
-        showHidden: true
-        folder: "file:///usr/share/doorphone"
-        nameFilters: ["show_icon_flag"]
-        showDirs : false
+                    }
+                }
+            }
+        }
 
-    }
+        FolderListModel {
+
+            id: folderModel1
+            showFiles : true
+            showHidden: true
+            folder: "file:///usr/share/doorphone"
+            nameFilters: ["show_icon_flag"]
+            showDirs : false
 
-	Rectangle {
-			id: face_detect
-			color: "transparent"
-			width: 60; height: 60
-			x: (root.width)/(1280/678)
-			y: (root.height)/(720/10)
-			Image{
-				id: face_icon
-				source: "pics/facedetect.png"
-				visible: false
-				states: [
+        }
+
+        Rectangle {
+            id: face_detect
+            color: "transparent"
+            width: 60; height: 60
+            x: (root.width)/(1280/678)
+            y: (root.height)/(720/10)
+            Image{
+                id: face_icon
+                source: "pics/facedetect.png"
+                visible: false
+                states: [
 
-					State {
+                    State {
 
-						name: "state1"
-						when: folderModel1.count >= 1
-						PropertyChanges { target: face_icon; visible: true}
+                        name: "state1"
+                        when: folderModel1.count >= 1
+                        PropertyChanges { target: face_icon; visible: true}
 
-					},
+                    },
 
-					State {
+                    State {
 
-						name: "state2"
-						when: folderModel1.count < 1
-						PropertyChanges { target: face_icon; visible: false}
+                        name: "state2"
+                        when: folderModel1.count < 1
+                        PropertyChanges { target: face_icon; visible: false}
 
-					}
+                    }
 
-				]
+                ]
 
-			transitions: [
+                transitions: [
 
-			  Transition {
+                    Transition {
 
-				  from: "state2"; to: "state1"
-				  PropertyAnimation { property: "visible"; duration: 0 }
-				  SequentialAnimation {
-					  loops: 5
-					  PropertyAnimation { id: animation; target: face_icon; property: "visible"; to: true; duration: 500 }
-					  PropertyAnimation { id: animation2; target: face_icon; property: "visible"; to: false; duration: 500 }
-				  }
-			  },
+                        from: "state2"; to: "state1"
+                        PropertyAnimation { property: "visible"; duration: 0 }
+                        SequentialAnimation {
+                            loops: 5
+                            PropertyAnimation { id: animation; target: face_icon; property: "visible"; to: true; duration: 500 }
+                            PropertyAnimation { id: animation2; target: face_icon; property: "visible"; to: false; duration: 500 }
+                        }
+                    },
 
-			  Transition {
-				  from: "state1"; to: "state2"
-				  PropertyAnimation { property: "visible"; duration: 100 }
-			  } ]
+                    Transition {
+                        from: "state1"; to: "state2"
+                        PropertyAnimation { property: "visible"; duration: 100 }
+                    } ]
 
-			}
+            }
 
-		}
+        }
         Timer {
             id: timeout
             interval: 100
@@ -4453,31 +4453,31 @@ Rectangle {
             repeat: false
             onTriggered: {
 
-                    // change position and resolution for main-displays
-                    camera1.wlsOutWidth = root.width * 3/4
-                    camera1.wlsOutHeight = root.height * 3/4
-                    camera1.wlsQos = false
-                    camera1.wlsPositionX = root.x
-                    camera1.wlsPositionY = root.y
-
-                    // change position and resolution for sub-displays
-                    camera2.wlsOutWidth = root.width / 4
-                    camera2.wlsOutHeight = root.height / 3
-                    camera2.wlsQos = false
-                    camera2.wlsPositionX = root.x + (root.width * 3/4)
-                    camera2.wlsPositionY = root.y
-
-                    camera3.wlsOutWidth = root.width / 4
-                    camera3.wlsOutHeight = root.height / 3
-                    camera3.wlsQos = false
-                    camera3.wlsPositionX = root.x + (root.width * 3/4)
-                    camera3.wlsPositionY = root.y + (root.height / 3)
-
-                    camera4.wlsOutWidth = root.width / 4
-                    camera4.wlsOutHeight = root.height / 3
-                    camera4.wlsQos = false
-                    camera4.wlsPositionX = root.x + (root.width * 3/4)
-                    camera4.wlsPositionY = root.y + (root.height * 2/3)
+                // change position and resolution for main-displays
+                camera1.wlsOutWidth = root.width * 3/4
+                camera1.wlsOutHeight = root.height * 3/4
+                camera1.wlsQos = false
+                camera1.wlsPositionX = root.x
+                camera1.wlsPositionY = root.y
+
+                // change position and resolution for sub-displays
+                camera2.wlsOutWidth = root.width / 4
+                camera2.wlsOutHeight = root.height / 3
+                camera2.wlsQos = false
+                camera2.wlsPositionX = root.x + (root.width * 3/4)
+                camera2.wlsPositionY = root.y
+
+                camera3.wlsOutWidth = root.width / 4
+                camera3.wlsOutHeight = root.height / 3
+                camera3.wlsQos = false
+                camera3.wlsPositionX = root.x + (root.width * 3/4)
+                camera3.wlsPositionY = root.y + (root.height / 3)
+
+                camera4.wlsOutWidth = root.width / 4
+                camera4.wlsOutHeight = root.height / 3
+                camera4.wlsQos = false
+                camera4.wlsPositionX = root.x + (root.width * 3/4)
+                camera4.wlsPositionY = root.y + (root.height * 2/3)
             }
         }
 
@@ -4485,10 +4485,10 @@ Rectangle {
 
 
     function toggle() {
-            if (root.state == "on")
-                root.state = "off";
-            else
-                root.state = "on";
+        if (root.state == "on")
+            root.state = "off";
+        else
+            root.state = "on";
     }
 
     function scale_UI(screenratio){
@@ -4530,20 +4530,20 @@ Rectangle {
             }
         }
         if (arrow.visible == false) {
-              if (display1_state == camera1_state) {
-                      micro.x = (root.width)/(1280/10)
-                      micro.y = (root.height/(720/480))
-              }else if (display2_state == camera1_state) {
-                      micro.x = (root.width/(1280/970))
-                      micro.y = (root.height/(720/180))
-              }else if (display3_state == camera1_state) {
-                      micro.x = (root.width/(1280/970))
-                      micro.y = (root.height/(720/420))
-              }else if (display4_state == camera1_state) {
-                      micro.x = (root.width/(1280/970))
-                      micro.y = (root.height/(720/655))
-              }
-         }
+            if (display1_state == camera1_state) {
+                micro.x = (root.width)/(1280/10)
+                micro.y = (root.height/(720/480))
+            }else if (display2_state == camera1_state) {
+                micro.x = (root.width/(1280/970))
+                micro.y = (root.height/(720/180))
+            }else if (display3_state == camera1_state) {
+                micro.x = (root.width/(1280/970))
+                micro.y = (root.height/(720/420))
+            }else if (display4_state == camera1_state) {
+                micro.x = (root.width/(1280/970))
+                micro.y = (root.height/(720/655))
+            }
+        }
         btn_4_3.enabled = false
         btn_5_4.enabled = false
         btn_16_10.enabled = false
@@ -4594,46 +4594,46 @@ Rectangle {
         rec3_state = rec3_state_normal
         rec4_state = rec4_state_normal
         switch (list_state) {
-            case list_state_red: {
-                rec_image.source = list_icon_red_01.get(0).icon_normal
-                rec1_image.source = list_icon_red.get(6).icon_normal
-                rec2_image.source = list_icon_red.get(0).icon_normal
-                rec3_image.source = list_icon_red.get(1).icon_normal
-                rec4_image.source = list_icon_red.get(2).icon_normal
-                break
-            }
-            case list_state_blue: {
-                rec_image.source = list_icon_blue_01.get(0).icon_normal
-                rec1_image.source = list_icon_blue.get(6).icon_normal
-                rec2_image.source = list_icon_blue.get(0).icon_normal
-                rec3_image.source = list_icon_blue.get(1).icon_normal
-                rec4_image.source = list_icon_blue.get(2).icon_normal
-                break
-            }
-            case list_state_green: {
-                rec_image.source = list_icon_green_01.get(0).icon_normal
-                rec1_image.source = list_icon_green.get(6).icon_normal
-                rec2_image.source = list_icon_green.get(0).icon_normal
-                rec3_image.source = list_icon_green.get(1).icon_normal
-                rec4_image.source = list_icon_green.get(2).icon_normal
-                break
-            }
-            case list_state_orange: {
-                rec_image.source = list_icon_orange_01.get(0).icon_normal
-                rec1_image.source = list_icon_orange.get(6).icon_normal
-                rec2_image.source = list_icon_orange.get(0).icon_normal
-                rec3_image.source = list_icon_orange.get(1).icon_normal
-                rec4_image.source = list_icon_orange.get(2).icon_normal
-                break
-            }
-            case list_state_yellow: {
-                rec_image.source = list_icon_yellow_01.get(0).icon_normal
-                rec1_image.source = list_icon_yellow.get(6).icon_normal
-                rec2_image.source = list_icon_yellow.get(0).icon_normal
-                rec3_image.source = list_icon_yellow.get(1).icon_normal
-                rec4_image.source = list_icon_yellow.get(2).icon_normal
-                break
-            }
+        case list_state_red: {
+            rec_image.source = list_icon_red_01.get(0).icon_normal
+            rec1_image.source = list_icon_red.get(6).icon_normal
+            rec2_image.source = list_icon_red.get(0).icon_normal
+            rec3_image.source = list_icon_red.get(1).icon_normal
+            rec4_image.source = list_icon_red.get(2).icon_normal
+            break
+        }
+        case list_state_blue: {
+            rec_image.source = list_icon_blue_01.get(0).icon_normal
+            rec1_image.source = list_icon_blue.get(6).icon_normal
+            rec2_image.source = list_icon_blue.get(0).icon_normal
+            rec3_image.source = list_icon_blue.get(1).icon_normal
+            rec4_image.source = list_icon_blue.get(2).icon_normal
+            break
+        }
+        case list_state_green: {
+            rec_image.source = list_icon_green_01.get(0).icon_normal
+            rec1_image.source = list_icon_green.get(6).icon_normal
+            rec2_image.source = list_icon_green.get(0).icon_normal
+            rec3_image.source = list_icon_green.get(1).icon_normal
+            rec4_image.source = list_icon_green.get(2).icon_normal
+            break
+        }
+        case list_state_orange: {
+            rec_image.source = list_icon_orange_01.get(0).icon_normal
+            rec1_image.source = list_icon_orange.get(6).icon_normal
+            rec2_image.source = list_icon_orange.get(0).icon_normal
+            rec3_image.source = list_icon_orange.get(1).icon_normal
+            rec4_image.source = list_icon_orange.get(2).icon_normal
+            break
+        }
+        case list_state_yellow: {
+            rec_image.source = list_icon_yellow_01.get(0).icon_normal
+            rec1_image.source = list_icon_yellow.get(6).icon_normal
+            rec2_image.source = list_icon_yellow.get(0).icon_normal
+            rec3_image.source = list_icon_yellow.get(1).icon_normal
+            rec4_image.source = list_icon_yellow.get(2).icon_normal
+            break
+        }
         }
     }
 
@@ -4646,41 +4646,41 @@ Rectangle {
         color_state = color_state_normal
         color_image.source = list_icon_red.get(3).icon_normal
         switch (list_state) {
-            case list_state_red: {
-                play_image.source = list_icon_red.get(5).icon_normal
-                stop_image.source = list_icon_red.get(4).icon_normal
-                rec_image.source = list_icon_red_01.get(0).icon_normal
-                set_image.source = list_icon_red_01.get(1).icon_normal
-                break
-            }
-            case list_state_blue: {
-                play_image.source = list_icon_blue.get(5).icon_normal
-                stop_image.source = list_icon_blue.get(4).icon_normal
-                rec_image.source = list_icon_blue_01.get(0).icon_normal
-                set_image.source = list_icon_blue_01.get(1).icon_normal
-                break
-            }
-            case list_state_green: {
-                play_image.source = list_icon_green.get(5).icon_normal
-                stop_image.source = list_icon_green.get(4).icon_normal
-                rec_image.source = list_icon_green_01.get(0).icon_normal
-                set_image.source = list_icon_green_01.get(1).icon_normal
-                break
-            }
-            case list_state_orange: {
-                play_image.source = list_icon_orange.get(5).icon_normal
-                stop_image.source = list_icon_orange.get(4).icon_normal
-                rec_image.source = list_icon_orange_01.get(0).icon_normal
-                set_image.source = list_icon_orange_01.get(1).icon_normal
-                break
-            }
-            case list_state_yellow: {
-                play_image.source = list_icon_yellow.get(5).icon_normal
-                stop_image.source = list_icon_yellow.get(4).icon_normal
-                rec_image.source = list_icon_yellow_01.get(0).icon_normal
-                set_image.source = list_icon_yellow_01.get(1).icon_normal
-                break
-            }
+        case list_state_red: {
+            play_image.source = list_icon_red.get(5).icon_normal
+            stop_image.source = list_icon_red.get(4).icon_normal
+            rec_image.source = list_icon_red_01.get(0).icon_normal
+            set_image.source = list_icon_red_01.get(1).icon_normal
+            break
+        }
+        case list_state_blue: {
+            play_image.source = list_icon_blue.get(5).icon_normal
+            stop_image.source = list_icon_blue.get(4).icon_normal
+            rec_image.source = list_icon_blue_01.get(0).icon_normal
+            set_image.source = list_icon_blue_01.get(1).icon_normal
+            break
+        }
+        case list_state_green: {
+            play_image.source = list_icon_green.get(5).icon_normal
+            stop_image.source = list_icon_green.get(4).icon_normal
+            rec_image.source = list_icon_green_01.get(0).icon_normal
+            set_image.source = list_icon_green_01.get(1).icon_normal
+            break
+        }
+        case list_state_orange: {
+            play_image.source = list_icon_orange.get(5).icon_normal
+            stop_image.source = list_icon_orange.get(4).icon_normal
+            rec_image.source = list_icon_orange_01.get(0).icon_normal
+            set_image.source = list_icon_orange_01.get(1).icon_normal
+            break
+        }
+        case list_state_yellow: {
+            play_image.source = list_icon_yellow.get(5).icon_normal
+            stop_image.source = list_icon_yellow.get(4).icon_normal
+            rec_image.source = list_icon_yellow_01.get(0).icon_normal
+            set_image.source = list_icon_yellow_01.get(1).icon_normal
+            break
+        }
         }
     }
 
@@ -4737,153 +4737,151 @@ Rectangle {
 
     function set_ball_normal_list(list_state,name_image,number) {
         switch (list_state) {
-            case list_state_red: {
-                name_image.source = list_icon_red.get(number).icon_normal
-                break
-            }
-            case list_state_blue: {
-                name_image.source = list_icon_blue.get(number).icon_normal
-                break
-            }
-            case list_state_green: {
-                name_image.source = list_icon_green.get(number).icon_normal
-                break
-            }
-            case list_state_orange: {
-                name_image.source = list_icon_orange.get(number).icon_normal
-                break
-            }
-            case list_state_yellow: {
-                name_image.source = list_icon_yellow.get(number).icon_normal
-                break
-            }
+        case list_state_red: {
+            name_image.source = list_icon_red.get(number).icon_normal
+            break
+        }
+        case list_state_blue: {
+            name_image.source = list_icon_blue.get(number).icon_normal
+            break
+        }
+        case list_state_green: {
+            name_image.source = list_icon_green.get(number).icon_normal
+            break
+        }
+        case list_state_orange: {
+            name_image.source = list_icon_orange.get(number).icon_normal
+            break
+        }
+        case list_state_yellow: {
+            name_image.source = list_icon_yellow.get(number).icon_normal
+            break
+        }
         }
     }
 
     function set_ball_bright_list(list_state,name_image,number) {
         switch (list_state) {
-            case list_state_red: {
-                name_image.source = list_icon_red.get(number).icon_bright
-                break
-            }
-            case list_state_blue: {
-                name_image.source = list_icon_blue.get(number).icon_bright
-                break
-            }
-            case list_state_green: {
-                name_image.source = list_icon_green.get(number).icon_bright
-                break
-            }
-            case list_state_orange: {
-                name_image.source = list_icon_orange.get(number).icon_bright
-                break
-            }
-            case list_state_yellow: {
-                name_image.source = list_icon_yellow.get(number).icon_bright
-                break
-            }
+        case list_state_red: {
+            name_image.source = list_icon_red.get(number).icon_bright
+            break
+        }
+        case list_state_blue: {
+            name_image.source = list_icon_blue.get(number).icon_bright
+            break
+        }
+        case list_state_green: {
+            name_image.source = list_icon_green.get(number).icon_bright
+            break
+        }
+        case list_state_orange: {
+            name_image.source = list_icon_orange.get(number).icon_bright
+            break
+        }
+        case list_state_yellow: {
+            name_image.source = list_icon_yellow.get(number).icon_bright
+            break
+        }
         }
     }
 
     function set_ball_normal_list_01(list_state,name_image,number) {
         switch (list_state) {
-            case list_state_red: {
-                name_image.source = list_icon_red_01.get(number).icon_normal
-                break
-            }
-            case list_state_blue: {
-                name_image.source = list_icon_blue_01.get(number).icon_normal
-                break
-            }
-            case list_state_green: {
-                name_image.source = list_icon_green_01.get(number).icon_normal
-                break
-            }
-            case list_state_orange: {
-                name_image.source = list_icon_orange_01.get(number).icon_normal
-                break
-            }
-            case list_state_yellow: {
-                name_image.source = list_icon_yellow_01.get(number).icon_normal
-                break
-            }
+        case list_state_red: {
+            name_image.source = list_icon_red_01.get(number).icon_normal
+            break
+        }
+        case list_state_blue: {
+            name_image.source = list_icon_blue_01.get(number).icon_normal
+            break
+        }
+        case list_state_green: {
+            name_image.source = list_icon_green_01.get(number).icon_normal
+            break
+        }
+        case list_state_orange: {
+            name_image.source = list_icon_orange_01.get(number).icon_normal
+            break
+        }
+        case list_state_yellow: {
+            name_image.source = list_icon_yellow_01.get(number).icon_normal
+            break
+        }
         }
     }
 
     function set_ball_bright_list_01(list_state,name_image,number) {
         switch (list_state) {
-            case list_state_red: {
-                name_image.source = list_icon_red_01.get(number).icon_bright
-                break
-            }
-            case list_state_blue: {
-                name_image.source = list_icon_blue_01.get(number).icon_bright
-                break
-            }
-            case list_state_green: {
-                name_image.source = list_icon_green_01.get(number).icon_bright
-                break
-            }
-            case list_state_orange: {
-                name_image.source = list_icon_orange_01.get(number).icon_bright
-                break
-            }
-            case list_state_yellow: {
-                name_image.source = list_icon_yellow_01.get(number).icon_bright
-                break
-            }
+        case list_state_red: {
+            name_image.source = list_icon_red_01.get(number).icon_bright
+            break
+        }
+        case list_state_blue: {
+            name_image.source = list_icon_blue_01.get(number).icon_bright
+            break
+        }
+        case list_state_green: {
+            name_image.source = list_icon_green_01.get(number).icon_bright
+            break
+        }
+        case list_state_orange: {
+            name_image.source = list_icon_orange_01.get(number).icon_bright
+            break
+        }
+        case list_state_yellow: {
+            name_image.source = list_icon_yellow_01.get(number).icon_bright
+            break
+        }
         }
     }
 
     function set_ball_normal_list_02(pathview,name_image,number) {
         switch (pathview) {
-            case list_icon_red: {
-                name_image.source = list_icon_red_01.get(number).icon_normal
-                break
-            }
-            case list_icon_blue: {
-                name_image.source = list_icon_blue_01.get(number).icon_normal
-                break
-            }
-            case list_icon_green: {
-                name_image.source = list_icon_green_01.get(number).icon_normal
-                break
-            }
-            case list_icon_orange: {
-                name_image.source = list_icon_orange_01.get(number).icon_normal
-                break
-            }
-            case list_icon_yellow: {
-                name_image.source = list_icon_yellow_01.get(number).icon_normal
-                break
-            }
+        case list_icon_red: {
+            name_image.source = list_icon_red_01.get(number).icon_normal
+            break
+        }
+        case list_icon_blue: {
+            name_image.source = list_icon_blue_01.get(number).icon_normal
+            break
+        }
+        case list_icon_green: {
+            name_image.source = list_icon_green_01.get(number).icon_normal
+            break
+        }
+        case list_icon_orange: {
+            name_image.source = list_icon_orange_01.get(number).icon_normal
+            break
+        }
+        case list_icon_yellow: {
+            name_image.source = list_icon_yellow_01.get(number).icon_normal
+            break
+        }
         }
     }
 
     function set_ball_bright_list_02(pathview,name_image,number) {
         switch (pathview) {
-            case list_icon_red: {
-                name_image.source = list_icon_red_01.get(number).icon_bright
-                break
-            }
-            case list_icon_blue: {
-                name_image.source = list_icon_blue_01.get(number).icon_bright
-                break
-            }
-            case list_icon_green: {
-                name_image.source = list_icon_green_01.get(number).icon_bright
-                break
-            }
-            case list_icon_orange: {
-                name_image.source = list_icon_orange_01.get(number).icon_bright
-                break
-            }
-            case list_icon_yellow: {
-                name_image.source = list_icon_yellow_01.get(number).icon_bright
-                break
-            }
+        case list_icon_red: {
+            name_image.source = list_icon_red_01.get(number).icon_bright
+            break
+        }
+        case list_icon_blue: {
+            name_image.source = list_icon_blue_01.get(number).icon_bright
+            break
+        }
+        case list_icon_green: {
+            name_image.source = list_icon_green_01.get(number).icon_bright
+            break
+        }
+        case list_icon_orange: {
+            name_image.source = list_icon_orange_01.get(number).icon_bright
+            break
+        }
+        case list_icon_yellow: {
+            name_image.source = list_icon_yellow_01.get(number).icon_bright
+            break
+        }
         }
     }
-
-
 }
-- 
1.9.1

